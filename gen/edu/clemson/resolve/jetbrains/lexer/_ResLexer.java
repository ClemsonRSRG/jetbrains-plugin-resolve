/* The following code was generated by JFlex 1.7.0-SNAPSHOT tweaked for IntelliJ platform */

package edu.clemson.resolve.jetbrains.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import edu.clemson.resolve.jetbrains.ResTypes;
import java.util.*;
import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static edu.clemson.resolve.jetbrains.RESOLVEParserDefinition.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0-SNAPSHOT
 * from the specification file <tt>ResLexer.flex</tt>
 */
class _ResLexer implements FlexLexer, ResTypes {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 14432 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\15\1\16\23\15"+
    "\1\17\1\15\1\20\1\21\12\15\1\22\10\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1"+
    "\33\1\34\1\23\1\35\1\36\2\23\1\15\1\37\3\23\1\40\10\23\1\41\1\42\20\23\1\43"+
    "\2\23\1\44\5\23\1\45\4\23\1\46\1\47\4\23\51\15\1\50\3\15\1\51\1\52\4\15\1"+
    "\53\12\23\1\54\u0381\23");

  /* The ZZ_CMAP_Y table has 2880 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\13\1\14\34"+
    "\13\1\15\1\16\1\17\10\1\1\20\1\21\1\22\1\23\1\24\3\22\1\25\10\13\1\26\12\13"+
    "\1\27\1\13\1\30\1\27\1\13\1\31\4\1\1\13\1\32\1\33\2\1\2\13\1\32\1\1\1\34\1"+
    "\27\5\13\1\35\1\36\1\37\1\1\1\40\1\13\1\1\1\41\5\13\1\42\1\43\1\44\1\13\1"+
    "\32\1\45\1\13\1\46\1\47\1\1\1\13\1\50\4\1\1\13\1\51\4\1\1\52\2\13\1\53\1\1"+
    "\1\54\1\55\1\27\1\56\1\57\1\60\1\61\1\62\1\63\1\55\1\16\1\64\1\57\1\60\1\65"+
    "\1\1\1\66\1\67\1\70\1\71\1\72\1\60\1\73\1\1\1\74\1\55\1\75\1\76\1\57\1\60"+
    "\1\73\1\1\1\63\1\55\1\43\1\77\1\100\1\101\1\102\1\1\1\74\1\67\1\1\1\103\1"+
    "\40\1\60\1\53\1\1\1\104\1\55\1\1\1\103\1\40\1\60\1\105\1\1\1\62\1\55\1\106"+
    "\1\103\1\40\1\13\1\107\1\62\1\110\1\55\1\111\1\112\1\113\1\13\1\114\1\115"+
    "\1\1\1\67\1\1\1\27\2\13\1\116\1\115\1\117\2\1\1\120\1\121\1\122\1\123\1\124"+
    "\1\125\2\1\1\74\1\1\1\117\1\1\1\126\1\13\1\127\1\1\1\130\7\1\2\13\1\32\1\110"+
    "\1\117\1\131\1\132\1\133\1\134\1\117\2\13\1\135\2\13\1\136\24\13\1\137\1\140"+
    "\2\13\1\137\2\13\1\141\1\142\1\14\3\13\1\142\3\13\1\32\2\1\1\13\1\1\5\13\1"+
    "\143\1\27\45\13\1\144\1\13\1\27\1\32\4\13\1\32\1\145\1\146\1\16\1\13\1\16"+
    "\1\13\1\16\1\146\1\74\3\13\1\147\1\1\1\150\1\117\2\1\1\117\5\13\1\31\2\13"+
    "\1\151\4\13\1\42\1\13\1\152\2\1\1\67\1\13\1\153\1\51\2\13\1\154\1\13\1\102"+
    "\1\117\2\1\1\13\1\115\3\13\1\51\2\1\2\117\1\155\5\1\1\112\2\13\1\147\1\156"+
    "\1\117\2\1\1\157\1\13\1\160\1\44\2\13\1\42\1\1\2\13\1\147\1\1\1\161\1\44\1"+
    "\13\1\153\6\1\1\162\1\163\14\13\4\1\21\13\1\143\2\13\1\143\1\164\1\13\1\153"+
    "\3\13\1\165\1\166\1\167\1\127\1\166\2\1\1\170\1\171\3\1\1\172\1\1\1\127\6"+
    "\1\1\173\1\174\1\175\1\176\1\177\3\1\1\200\7\201\1\202\1\201\1\203\3\201\1"+
    "\204\11\201\1\205\10\201\1\206\1\207\1\201\100\1\2\201\1\210\1\201\40\1\20"+
    "\201\20\1\2\13\1\152\2\13\1\152\10\13\1\211\1\212\2\13\1\135\3\13\1\213\1"+
    "\1\1\13\1\115\4\214\4\1\1\110\35\1\1\215\2\1\1\216\1\27\4\13\1\217\1\27\4"+
    "\13\1\136\1\112\1\13\1\153\1\27\4\13\1\152\1\1\1\13\1\32\3\1\1\13\40\1\133"+
    "\13\1\42\4\1\135\13\1\42\2\1\10\13\1\127\4\1\2\13\1\153\20\13\1\127\1\13\1"+
    "\220\1\1\2\13\1\152\1\110\1\13\1\153\4\13\1\42\2\1\1\221\1\222\5\13\1\223"+
    "\1\13\1\153\1\31\3\1\1\221\1\224\1\13\1\33\1\1\3\13\1\147\1\222\2\13\1\147"+
    "\1\1\1\117\1\1\1\225\1\44\1\13\1\42\1\13\1\115\1\1\1\13\1\127\1\52\2\13\1"+
    "\33\1\110\1\117\1\226\1\227\2\13\1\50\1\1\1\230\1\117\1\13\1\231\3\13\1\232"+
    "\1\233\1\234\1\32\1\70\1\235\1\236\1\214\2\13\1\136\1\42\7\13\1\33\1\117\72"+
    "\13\1\147\1\13\1\237\2\13\1\154\120\1\26\13\1\153\6\13\1\102\2\1\1\115\1\240"+
    "\1\60\1\241\1\242\6\13\1\16\1\1\1\157\25\13\1\153\1\1\4\13\1\222\2\13\1\31"+
    "\2\1\1\154\7\1\1\226\7\13\1\127\1\1\1\117\1\27\1\32\1\27\1\32\1\243\4\13\1"+
    "\152\1\244\1\245\2\1\1\246\1\13\1\14\1\247\2\153\2\1\7\13\1\32\30\1\1\13\1"+
    "\127\3\13\1\74\2\1\2\13\1\1\1\13\1\250\2\13\1\42\1\13\1\153\2\13\1\251\3\1"+
    "\11\13\1\153\1\117\5\1\2\13\1\31\3\13\1\147\11\1\23\13\1\115\1\13\1\42\1\31"+
    "\11\1\1\252\2\13\1\253\1\13\1\42\1\13\1\115\1\13\1\152\4\1\1\13\1\254\1\13"+
    "\1\42\1\13\1\102\4\1\3\13\1\255\4\1\1\74\1\256\1\13\1\147\2\1\1\13\1\127\1"+
    "\13\1\127\2\1\1\126\1\13\1\51\1\1\3\13\1\42\1\13\1\42\1\13\1\33\1\13\1\16"+
    "\6\1\4\13\1\50\3\1\3\13\1\33\3\13\1\33\60\1\1\157\2\13\1\31\2\1\1\67\1\1\1"+
    "\157\2\13\2\1\1\13\1\50\1\117\1\157\1\13\1\115\1\67\1\1\2\13\1\257\1\157\2"+
    "\13\1\33\1\260\1\261\2\1\1\13\1\72\1\154\5\1\1\262\1\263\1\50\2\13\1\152\1"+
    "\1\1\117\1\76\1\57\1\60\1\73\1\1\1\264\1\16\21\1\3\13\1\1\1\265\1\117\12\1"+
    "\2\13\1\152\2\1\1\266\2\1\3\13\1\1\1\267\1\117\2\1\2\13\1\32\1\1\1\117\3\1"+
    "\1\13\1\102\1\1\1\117\26\1\4\13\1\117\1\110\34\1\3\13\1\50\20\1\71\13\1\102"+
    "\16\1\14\13\1\147\53\1\2\13\1\152\75\1\44\13\1\115\33\1\43\13\1\50\1\13\1"+
    "\152\1\117\6\1\1\13\1\153\1\1\3\13\1\1\1\147\1\117\1\157\1\270\1\13\67\1\4"+
    "\13\1\51\1\74\3\1\1\157\6\1\1\16\77\1\6\13\1\32\1\127\1\50\1\102\66\1\5\13"+
    "\1\226\3\13\1\146\1\271\1\272\1\273\3\13\1\274\1\275\1\13\1\276\1\277\1\40"+
    "\24\13\1\300\1\13\1\40\1\136\1\13\1\136\1\13\1\226\1\13\1\226\1\152\1\13\1"+
    "\152\1\13\1\60\1\13\1\60\1\13\1\301\3\302\14\13\1\51\123\1\1\273\1\13\1\303"+
    "\1\304\1\305\1\306\1\307\1\310\1\311\1\154\1\312\1\154\24\1\55\13\1\115\2"+
    "\1\103\13\1\51\15\13\1\153\150\13\1\16\25\1\41\13\1\153\36\1");

  /* The ZZ_CMAP_A table has 3248 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\3\1\2\1\1\1\4\1\2\22\0\1\3\1\15\1\20\1\22\3\0\1\24\1\45\1\46\1\16"+
    "\1\15\1\51\1\15\1\23\1\5\1\12\10\27\1\11\1\47\1\50\1\15\1\17\1\15\2\0\2\6"+
    "\1\61\1\77\1\100\1\105\2\6\1\107\4\6\1\112\1\113\1\64\1\6\1\111\1\6\1\116"+
    "\1\26\1\117\1\120\3\6\1\41\1\25\1\42\1\0\1\7\1\0\1\55\1\57\1\71\1\66\1\67"+
    "\1\75\1\70\1\73\1\52\2\6\1\72\1\102\1\74\1\65\1\76\1\115\1\62\1\56\1\63\1"+
    "\103\1\21\1\114\1\101\1\60\1\110\1\30\1\44\1\31\1\15\6\0\1\1\24\0\1\6\12\0"+
    "\1\6\4\0\1\6\5\0\27\6\1\0\12\6\4\0\14\6\16\0\5\6\7\0\1\6\1\0\1\6\1\0\5\14"+
    "\1\13\2\14\2\13\4\14\1\13\1\14\6\13\1\14\1\13\3\14\1\13\1\14\1\13\24\14\1"+
    "\13\30\14\1\53\12\14\1\13\11\14\2\6\10\0\6\6\1\0\26\6\2\0\1\6\6\0\10\6\10"+
    "\0\13\6\5\0\3\6\15\0\12\10\4\0\6\6\1\0\1\6\17\0\2\6\7\0\2\6\12\10\3\6\2\0"+
    "\2\6\1\0\16\6\15\0\11\6\13\0\1\6\16\0\12\10\6\6\4\0\2\6\4\0\1\6\5\0\6\6\4"+
    "\0\1\6\11\0\1\6\3\0\1\6\7\0\11\6\7\0\5\6\17\0\26\6\3\0\1\6\2\0\1\6\7\0\12"+
    "\6\4\0\12\10\1\6\4\0\10\6\2\0\2\6\2\0\26\6\1\0\7\6\1\0\1\6\3\0\4\6\3\0\1\6"+
    "\20\0\1\6\15\0\2\6\1\0\1\6\5\0\6\6\4\0\2\6\1\0\2\6\1\0\2\6\1\0\2\6\17\0\4"+
    "\6\1\0\1\6\7\0\12\10\2\0\3\6\20\0\11\6\1\0\3\6\1\0\16\6\1\0\2\6\1\0\5\6\3"+
    "\0\1\6\2\0\1\6\30\0\1\6\13\0\10\6\2\0\1\6\3\0\1\6\1\0\6\6\3\0\3\6\1\0\4\6"+
    "\3\0\2\6\1\0\1\6\1\0\2\6\3\0\2\6\3\0\3\6\3\0\14\6\13\0\10\6\1\0\2\6\10\0\3"+
    "\6\5\0\4\6\1\0\5\6\3\0\1\6\3\0\2\6\15\0\13\6\2\0\1\6\21\0\1\6\12\0\6\6\5\0"+
    "\22\6\3\0\10\6\1\0\11\6\1\0\1\6\2\0\7\6\11\0\1\6\1\0\2\6\14\0\12\10\7\0\2"+
    "\6\1\0\1\6\2\0\2\6\1\0\1\6\2\0\1\6\6\0\4\6\1\0\7\6\1\0\3\6\1\0\1\6\1\0\1\6"+
    "\2\0\2\6\1\0\4\6\1\0\2\6\11\0\1\6\2\0\5\6\1\0\1\6\11\0\12\10\2\0\14\6\1\0"+
    "\24\6\13\0\5\6\3\0\6\6\4\0\4\6\3\0\1\6\3\0\2\6\7\0\3\6\4\0\15\6\14\0\1\6\1"+
    "\0\6\6\1\0\1\6\5\0\1\6\2\0\13\6\1\0\15\6\1\0\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2"+
    "\0\1\6\1\0\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2\0\16\6\2\0\6\6\2\0\15\6\2\0\1\6\1"+
    "\0\10\6\7\0\15\6\1\0\6\6\23\0\1\6\4\0\1\6\3\0\11\6\1\0\1\6\5\0\17\6\1\0\16"+
    "\6\2\0\14\6\13\0\1\6\15\0\7\6\7\0\16\6\15\0\2\6\12\10\3\0\3\6\11\0\4\6\1\0"+
    "\4\6\3\0\2\6\11\0\10\6\1\0\1\6\1\0\1\6\1\0\1\6\1\0\6\6\1\0\7\6\1\0\1\6\3\0"+
    "\3\6\1\0\7\6\3\0\4\6\2\0\6\6\14\0\2\1\10\0\1\43\16\0\1\6\15\0\1\6\2\13\1\14"+
    "\4\13\1\14\2\13\12\14\1\13\1\14\3\13\5\14\6\13\1\14\1\13\1\14\1\13\1\14\1"+
    "\13\4\14\1\13\13\14\2\13\4\14\5\13\5\14\4\13\1\14\1\13\3\0\2\6\13\0\20\13"+
    "\1\106\2\13\1\104\21\13\1\32\12\13\1\54\27\13\1\35\1\36\23\13\1\37\2\13\1"+
    "\40\27\13\1\33\1\34\6\13\5\6\6\0\4\6\3\0\2\6\14\0\10\6\7\0\10\6\1\0\7\6\6"+
    "\0\2\6\12\0\5\6\5\0\2\6\3\0\7\6\6\0\3\6\12\10\2\6\13\0\11\6\2\0\27\6\2\0\7"+
    "\6\1\0\3\6\1\0\4\6\1\0\4\6\2\0\6\6\3\0\1\6\1\0\1\6\2\0\5\6\1\0\12\6\12\10"+
    "\5\6\1\0\3\6\1\0\10\6\4\0\7\6\3\0\1\6\3\0\2\6\1\0\1\6\3\0\2\6\2\0\5\6\2\0"+
    "\1\6\1\0\1\6\30\0\3\6\3\0\6\6\2\0\6\6\2\0\6\6\11\0\7\6\4\0\5\6\3\0\5\6\5\0"+
    "\1\6\1\0\10\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0\2\6\1\0\12\6\6\0\12\6\2\0\6\6\2"+
    "\0\6\6\2\0\6\6\2\0\3\6\3\0\14\6\1\0\16\6\1\0\2\6\1\0\2\6\1\0\10\6\6\0\4\6"+
    "\4\0\16\6\2\0\1\6\1\0\14\6\1\0\2\6\3\0\1\6\2\0\4\6\1\0\2\6\12\0\10\6\6\0\6"+
    "\6\1\0\3\6\1\0\12\6\3\0\1\6\12\0\4\6\13\0\12\10\1\6\1\0\1\6\3\0\7\6\1\0\1"+
    "\6\1\0\4\6\1\0\17\6\1\0\2\6\14\0\3\6\4\0\2\6\1\0\1\6\20\0\4\6\10\0\1\6\13"+
    "\0\10\6\5\0\3\6\2\0\1\6\2\0\2\6\2\0\4\6\1\0\14\6\1\0\1\6\1\0\7\6\1\0\21\6"+
    "\1\0\4\6\2\0\10\6\1\0\7\6\1\0\14\6\1\0\4\6\1\0\5\6\1\0\1\6\3\0\14\6\2\0\13"+
    "\6\1\0\10\6\2\0\22\10\1\0\2\6\1\0\1\6\2\0\1\6\1\0\12\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\6\0\1\6\4\0\1\6\1\0\1\6\1\0\1\6\1\0\3\6\1\0\2\6\1\0\1\6\2\0\1\6\1\0\1"+
    "\6\1\0\1\6\1\0\1\6\1\0\1\6\1\0\2\6\1\0\1\6\2\0\4\6\1\0\7\6\1\0\4\6\1\0\4\6"+
    "\1\0\1\6\1\0\12\6\1\0\5\6\1\0\3\6\1\0\5\6\1\0\5\6");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\1\4\1\5\2\6\2\7"+
    "\1\4\1\10\1\11\1\12\1\13\1\1\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\5\1\36\1\37\21\5\1\40\1\5\1\41\10\5"+
    "\1\42\1\43\1\11\4\0\1\44\1\45\1\0\1\46"+
    "\1\47\1\50\1\5\1\51\1\52\1\5\1\53\12\5"+
    "\1\54\1\55\27\5\1\56\12\5\2\43\1\57\1\60"+
    "\1\1\2\0\1\61\26\5\1\62\12\5\1\63\25\5"+
    "\1\64\1\5\2\43\1\4\1\65\1\0\15\5\1\66"+
    "\1\67\1\70\5\5\1\71\12\5\1\72\7\5\1\73"+
    "\12\5\1\74\1\5\1\75\2\5\1\43\1\0\1\76"+
    "\33\5\1\77\24\5\1\100\1\5\1\101\14\5\1\102"+
    "\11\5\1\103\1\5\1\104\4\5\1\40\5\5\1\41"+
    "\3\5\1\105\1\5\1\106\10\5\1\107\12\5\1\110"+
    "\10\5\1\111\3\5\1\112\1\113\7\5\1\114\7\5"+
    "\1\115\1\116\1\117\1\120\5\5\1\121\1\122\2\5"+
    "\1\123\5\5\1\124\1\5\1\125\5\5\1\126\1\5"+
    "\1\127\2\5\1\130\1\131\1\132\1\5\1\133\4\5"+
    "\1\134\2\5\1\135\1\5\1\136\1\5\1\137\1\140"+
    "\5\5\1\141\1\142\3\5\1\143\5\5\1\144\1\145"+
    "\1\5\1\146\1\5\1\147\1\150\1\151\1\152\10\5"+
    "\1\153\1\154\1\155\1\156";

  private static int [] zzUnpackAction() {
    int [] result = new int[488];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\121\0\242\0\121\0\242\0\363\0\u0144\0\u0195"+
    "\0\121\0\121\0\u0144\0\u01e6\0\u01e6\0\u0237\0\121\0\u0288"+
    "\0\u02d9\0\u032a\0\u037b\0\121\0\121\0\121\0\121\0\121"+
    "\0\121\0\121\0\121\0\121\0\121\0\121\0\u03cc\0\121"+
    "\0\u041d\0\121\0\121\0\u046e\0\u0144\0\121\0\u04bf\0\u0510"+
    "\0\u0561\0\u05b2\0\u0603\0\u0654\0\u06a5\0\u06f6\0\u0747\0\u0798"+
    "\0\u07e9\0\u083a\0\u088b\0\u08dc\0\u092d\0\u097e\0\u09cf\0\121"+
    "\0\u0a20\0\121\0\u0a71\0\u0ac2\0\u0b13\0\u0b64\0\u0bb5\0\u0c06"+
    "\0\u0c57\0\u0ca8\0\u0cf9\0\u0d4a\0\121\0\u0d9b\0\u0dec\0\u0e3d"+
    "\0\u0e8e\0\121\0\121\0\u0edf\0\u0f30\0\121\0\u0144\0\u0f81"+
    "\0\u0144\0\u0144\0\u0fd2\0\u0144\0\u1023\0\u1074\0\u10c5\0\u1116"+
    "\0\u1167\0\u11b8\0\u1209\0\u125a\0\u12ab\0\u12fc\0\u0144\0\u0144"+
    "\0\u134d\0\u139e\0\u13ef\0\u1440\0\u1491\0\u14e2\0\u1533\0\u1584"+
    "\0\u15d5\0\u1626\0\u1677\0\u16c8\0\u1719\0\u176a\0\u17bb\0\u180c"+
    "\0\u185d\0\u18ae\0\u18ff\0\u1950\0\u19a1\0\u19f2\0\u1a43\0\u0144"+
    "\0\u1a94\0\u1ae5\0\u1b36\0\u1b87\0\u1bd8\0\u1c29\0\u1c7a\0\u1ccb"+
    "\0\u1d1c\0\u1d6d\0\u1dbe\0\u1e0f\0\121\0\121\0\u0e3d\0\u1e60"+
    "\0\u1eb1\0\121\0\u1f02\0\u1f53\0\u1fa4\0\u1ff5\0\u2046\0\u2097"+
    "\0\u20e8\0\u2139\0\u218a\0\u21db\0\u222c\0\u227d\0\u22ce\0\u231f"+
    "\0\u2370\0\u23c1\0\u2412\0\u2463\0\u24b4\0\u2505\0\u2556\0\u25a7"+
    "\0\u0144\0\u25f8\0\u2649\0\u269a\0\u26eb\0\u273c\0\u278d\0\u27de"+
    "\0\u282f\0\u2880\0\u28d1\0\u0144\0\u2922\0\u2973\0\u29c4\0\u2a15"+
    "\0\u2a66\0\u2ab7\0\u2b08\0\u2b59\0\u2baa\0\u2bfb\0\u2c4c\0\u2c9d"+
    "\0\u2cee\0\u2d3f\0\u2d90\0\u2de1\0\u2e32\0\u2e83\0\u2ed4\0\u2f25"+
    "\0\u2f76\0\u0144\0\u2fc7\0\u3018\0\u01e6\0\u1e0f\0\121\0\u3069"+
    "\0\u30ba\0\u310b\0\u315c\0\u31ad\0\u31fe\0\u324f\0\u32a0\0\u32f1"+
    "\0\u3342\0\u3393\0\u33e4\0\u3435\0\u3486\0\u0144\0\u0144\0\u0144"+
    "\0\u34d7\0\u3528\0\u3579\0\u35ca\0\u361b\0\u0144\0\u366c\0\u36bd"+
    "\0\u370e\0\u375f\0\u37b0\0\u3801\0\u3852\0\u38a3\0\u38f4\0\u3945"+
    "\0\u0144\0\u3996\0\u39e7\0\u3a38\0\u3a89\0\u3ada\0\u3b2b\0\u3b7c"+
    "\0\u0144\0\u3bcd\0\u3c1e\0\u3c6f\0\u3cc0\0\u3d11\0\u3d62\0\u3db3"+
    "\0\u3e04\0\u3e55\0\u3ea6\0\u0144\0\u3ef7\0\u0144\0\u3f48\0\u3f99"+
    "\0\121\0\u3018\0\121\0\u3fea\0\u403b\0\u408c\0\u40dd\0\u412e"+
    "\0\u417f\0\u41d0\0\u4221\0\u4272\0\u42c3\0\u4314\0\u4365\0\u43b6"+
    "\0\u4407\0\u4458\0\u44a9\0\u44fa\0\u454b\0\u459c\0\u45ed\0\u463e"+
    "\0\u468f\0\u46e0\0\u4731\0\u4782\0\u47d3\0\u4824\0\u0144\0\u4875"+
    "\0\u48c6\0\u4917\0\u4968\0\u49b9\0\u4a0a\0\u4a5b\0\u4aac\0\u4afd"+
    "\0\u4b4e\0\u4b9f\0\u4bf0\0\u4c41\0\u4c92\0\u4ce3\0\u4d34\0\u4d85"+
    "\0\u4dd6\0\u4e27\0\u4e78\0\u0144\0\u4ec9\0\u0144\0\u4f1a\0\u4f6b"+
    "\0\u4fbc\0\u500d\0\u505e\0\u50af\0\u5100\0\u5151\0\u51a2\0\u51f3"+
    "\0\u5244\0\u5295\0\u0144\0\u52e6\0\u5337\0\u5388\0\u53d9\0\u542a"+
    "\0\u547b\0\u54cc\0\u551d\0\u556e\0\u0144\0\u55bf\0\u0144\0\u5610"+
    "\0\u5661\0\u56b2\0\u5703\0\u0144\0\u5754\0\u57a5\0\u57f6\0\u5847"+
    "\0\u5898\0\u0144\0\u58e9\0\u593a\0\u598b\0\u0144\0\u59dc\0\u0144"+
    "\0\u5a2d\0\u5a7e\0\u5acf\0\u5b20\0\u5b71\0\u5bc2\0\u5c13\0\u5c64"+
    "\0\u0144\0\u5cb5\0\u5d06\0\u5d57\0\u5da8\0\u5df9\0\u5e4a\0\u5e9b"+
    "\0\u5eec\0\u5f3d\0\u5f8e\0\u0144\0\u5fdf\0\u6030\0\u6081\0\u60d2"+
    "\0\u6123\0\u6174\0\u61c5\0\u6216\0\u0144\0\u6267\0\u62b8\0\u6309"+
    "\0\u0144\0\u0144\0\u635a\0\u63ab\0\u63fc\0\u644d\0\u649e\0\u64ef"+
    "\0\u6540\0\u0144\0\u6591\0\u65e2\0\u6633\0\u6684\0\u66d5\0\u6726"+
    "\0\u6777\0\u0144\0\u0144\0\u0144\0\u0144\0\u67c8\0\u6819\0\u686a"+
    "\0\u68bb\0\u690c\0\u695d\0\u0144\0\u69ae\0\u69ff\0\u0144\0\u6a50"+
    "\0\u6aa1\0\u6af2\0\u6b43\0\u6b94\0\u0144\0\u6be5\0\u0144\0\u6c36"+
    "\0\u6c87\0\u6cd8\0\u6d29\0\u6d7a\0\u0144\0\u6dcb\0\u0144\0\u6e1c"+
    "\0\u6e6d\0\u0144\0\u0144\0\u0144\0\u6ebe\0\u0144\0\u6f0f\0\u6f60"+
    "\0\u6fb1\0\u7002\0\u0144\0\u7053\0\u70a4\0\u0144\0\u70f5\0\u0144"+
    "\0\u7146\0\u0144\0\u0144\0\u7197\0\u71e8\0\u7239\0\u728a\0\u72db"+
    "\0\u0144\0\u0144\0\u732c\0\u737d\0\u73ce\0\u0144\0\u741f\0\u7470"+
    "\0\u74c1\0\u7512\0\u7563\0\u0144\0\u0144\0\u75b4\0\u0144\0\u7605"+
    "\0\u0144\0\u0144\0\u0144\0\u0144\0\u7656\0\u76a7\0\u76f8\0\u7749"+
    "\0\u779a\0\u77eb\0\u783c\0\u788d\0\u0144\0\u0144\0\u0144\0\u0144";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[488];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\2\7\1\2\1\10"+
    "\1\11\1\12\1\13\2\14\1\15\1\16\1\7\1\17"+
    "\1\20\1\21\1\2\1\7\1\10\1\22\1\23\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44"+
    "\1\45\1\46\1\47\1\7\1\50\1\7\1\51\1\52"+
    "\1\53\1\54\1\55\1\56\1\57\1\7\1\60\1\61"+
    "\2\7\1\62\1\63\1\64\1\65\1\7\1\66\1\67"+
    "\1\70\1\71\1\72\1\73\1\7\1\74\1\75\1\76"+
    "\1\77\1\7\1\100\1\101\1\102\122\0\2\3\1\0"+
    "\1\3\121\0\1\103\7\0\1\14\1\104\1\14\107\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\27\7\1\0\1\7\1\0\12\7\11\0"+
    "\2\10\14\0\1\10\76\0\1\14\7\0\3\14\101\0"+
    "\2\16\1\0\15\16\1\105\4\16\1\106\73\16\23\0"+
    "\1\107\75\0\25\110\1\111\73\110\30\0\1\112\121\0"+
    "\1\113\141\0\1\114\65\0\1\115\27\0\1\116\57\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\7\1\117\15\7\1\120\1\121\6\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\1\7"+
    "\1\122\13\7\1\123\11\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\3\7\1\124\23\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\1\125\7\7\1\126"+
    "\4\7\1\127\1\130\10\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\131\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\3\7\1\132\1\7"+
    "\1\133\10\7\1\134\10\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\5\7\1\135\21\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\6\7\1\136\11\7"+
    "\1\137\6\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\10\7\1\140\1\7\1\141\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\142"+
    "\4\0\2\7\22\0\2\7\1\0\15\7\1\143\1\7"+
    "\1\144\4\7\1\145\2\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\10\7\1\146\4\7\1\147\1\150"+
    "\10\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\151\26\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\152\4\7\1\153\2\7\1\154\16\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\5\7\1\155"+
    "\21\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\12\7\1\156\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\17\7\1\157\4\7\1\160\2\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\1\161\7\7"+
    "\1\162\16\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\7\1\163\17\7\1\164\5\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\1\165\7\7\1\166"+
    "\16\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\17\7\1\167\1\170\4\7\1\171\1\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\12\7\1\172\14\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\10\7"+
    "\1\173\16\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\21\7\1\174\5\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\1\175\1\7\1\0\16\7\1\176\10\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\3\7\1\177"+
    "\12\7\1\200\10\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\201\26\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\16\7\1\202\10\7\1\0\1\7"+
    "\1\0\12\7\2\103\1\0\116\103\5\203\1\104\7\203"+
    "\1\104\1\204\1\104\101\203\12\0\1\16\5\0\2\16"+
    "\3\0\3\16\25\0\1\16\1\0\1\16\2\0\2\16"+
    "\10\0\2\16\3\0\1\16\1\0\1\16\40\0\1\205"+
    "\121\0\1\206\115\0\1\110\2\0\1\207\1\110\27\0"+
    "\1\110\1\0\1\110\2\0\2\110\10\0\2\110\46\0"+
    "\1\210\26\0\1\211\115\0\1\212\57\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\1\213\1\7"+
    "\1\0\27\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\6\7\1\214\20\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\5\7\1\215\1\216\20\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\5\7\1\217"+
    "\11\7\1\220\7\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\221\26\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\1\222\26\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\223\1\224\17\7\1\225"+
    "\5\7\1\0\1\7\1\0\6\7\1\226\3\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\21\7\1\227\5\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\26\7\1\230\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\12\7\1\231\14\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\10\7"+
    "\1\232\1\7\1\233\14\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\16\7\1\234\10\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\14\7\1\235\12\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\1\236"+
    "\26\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\7\1\237\25\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\7\1\240\7\7\1\241\15\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\6\7\1\242"+
    "\3\7\1\243\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\5\7\1\244\11\7\1\245\7\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\12\7\1\246"+
    "\14\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\247\26\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\25\7\1\250\1\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\15\7\1\251\7\7\1\252\1\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\10\7"+
    "\1\253\16\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\5\7\1\254\21\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\255\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\20\7\1\256\6\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\16\7"+
    "\1\257\10\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\260"+
    "\1\7\1\0\6\7\1\261\20\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\1\262\1\7\1\0\27\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\11\7\1\263\15\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\12\7"+
    "\1\264\14\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\11\7\1\265\15\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\14\7\1\266\12\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\5\7\1\267\21\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\11\7"+
    "\1\270\15\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\21\7\1\271\5\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\1\272\13\7\1\273\12\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\6\7\1\274"+
    "\20\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\12\7\1\275\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\6\7\1\276\20\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\1\277\1\7\1\0\27\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\21\7\1\300\5\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\12\7"+
    "\1\301\14\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\5\7\1\302\21\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\1\303\1\7\1\0\27\7\1\0\1\7\1\0"+
    "\12\7\16\203\1\304\107\203\1\305\7\203\1\104\1\306"+
    "\1\104\101\203\46\0\1\307\75\0\1\310\103\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\6\7\1\311\20\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\312\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\6\7\1\313\20\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\12\7"+
    "\1\314\14\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\10\7\1\315\16\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\1\7\1\316\12\7\1\317\12\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\1\7"+
    "\1\320\25\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\321"+
    "\1\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\15\7\1\322\11\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\6\7\1\323\20\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\15\7\1\324"+
    "\11\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\26\7\1\325\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\12\7\1\326\14\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\327\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\17\7\1\330\7\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\14\7"+
    "\1\331\12\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\14\7\1\332\12\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\333\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\5\7\1\334\21\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\15\7"+
    "\1\335\11\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\12\7\1\336\14\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\26\7\1\337\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\12\7\1\340\14\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\25\7\1\341"+
    "\1\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\5\7\1\342\21\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\343\4\0\2\7\22\0"+
    "\2\7\1\0\1\7\1\316\25\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\344\26\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\17\7\1\345\7\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\2\7"+
    "\1\346\24\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\7\1\347\25\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\1\350\1\7\1\0\27\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\25\7\1\351\1\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\1\7\1\352"+
    "\25\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\1\353\1\7"+
    "\1\0\27\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\354\26\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\7\1\355\25\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\12\7\1\356\14\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\17\7\1\357"+
    "\7\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\12\7\1\360\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\7\1\361\25\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\362\26\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\1\363\1\7\1\0\27\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\1\364\26\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\26\7"+
    "\1\365\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\15\7\1\366\11\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\15\7\1\367\11\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\10\7\1\370\15\7\1\371"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\1\372\1\7\1\0"+
    "\27\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\5\7\1\373\21\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\16\7\1\374\10\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\14\7\1\375\12\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\12\7\1\376"+
    "\14\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\10\7\1\377\16\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\15\7\1\u0100\11\7\1\0\1\7\1\0"+
    "\12\7\5\203\1\u0101\10\203\1\u0102\102\203\46\0\1\u0103"+
    "\60\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\1\u0104\1\7\1\0\27\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\5\7\1\u0105\21\7\1\0"+
    "\1\7\1\0\12\7\6\0\1\7\1\u0106\3\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\27\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\13\7\1\u0107\13\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\15\7\1\u0108\11\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\6\7\1\u0109\20\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\12\7\1\u010a"+
    "\14\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\7\1\u010b\25\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\17\7\1\u010c\7\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\1\u010d\1\7\1\0\27\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\10\7\1\u010e\16\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\1\u010f"+
    "\26\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\1\u0110\1\7"+
    "\1\0\27\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\12\7\1\u0111\14\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\1\u0112\1\7\1\0\27\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\5\7\1\u0113\21\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\12\7\1\u0114"+
    "\14\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\26\7\1\u0115\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\5\7\1\u0116\21\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\5\7\1\u0117\11\7\1\u0118\7\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\21\7"+
    "\1\u0119\5\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\12\7\1\u011a\14\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\u011b\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\5\7\1\u011c\21\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\13\7"+
    "\1\u011d\13\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\11\7\1\u011e\15\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\u011f\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\15\7\1\u0120\11\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\12\7"+
    "\1\u0121\14\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\17\7\1\u0122\7\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\17\7\1\u0123\7\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\6\7\1\u0124\20\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\17\7"+
    "\1\u0125\7\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\6\7\1\u0126\20\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\15\7\1\u0127\11\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\6\7\1\u0128\20\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\15\7"+
    "\1\u0129\11\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\15\7\1\u012a\11\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\14\7\1\u012b\12\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\1\u012c\1\7\1\0\27\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\1\u012d\1\7\1\0\27\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\5\7"+
    "\1\u012e\21\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\5\7\1\u012f\21\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\14\7\1\u0130\12\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\1\u0131\26\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\16\7\1\u0132"+
    "\10\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\5\7\1\u0133\21\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\12\7\1\u0134\14\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\u0135\26\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\1\7\1\u0136\25\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\7\7"+
    "\1\u0137\17\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\10\7\1\u0138\16\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\15\7\1\u0139\11\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\5\7\1\u013a\21\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\21\7"+
    "\1\u013b\5\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\u013c"+
    "\1\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\u013d\26\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\27\7\1\0\1\7\1\0\1\7"+
    "\1\u013e\10\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\5\7\1\u013f\21\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\14\7"+
    "\1\u0140\12\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\5\7\1\u0141\21\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\11\7\1\u0142\15\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\1\7\1\u0143\25\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\27\7"+
    "\1\0\1\7\1\0\5\7\1\u0144\4\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\u0145\26\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\u0146\26\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\u0147\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\17\7\1\u0148\7\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\11\7"+
    "\1\u0149\15\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\15\7\1\u014a\11\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\1\7\1\u014b\25\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\17\7\1\u014c\7\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\1\7"+
    "\1\u014d\25\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\u014e"+
    "\1\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\45\26\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\3\7\1\u014f\23\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\5\7\1\u0150\21\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\1\u0151\1\7\1\0"+
    "\12\7\1\u0152\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\14\7\1\u0153\12\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\7\1\u0154\25\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\1\7\1\u0155"+
    "\25\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\u0156\26\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\12\7\1\u0157\14\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\12\7\1\u0158\14\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\1\u0159\1\7\1\0\27\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\15\7\1\u015a"+
    "\11\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\6\7\1\u015b\20\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\14\7\1\u015c\12\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\27\7\1\0\1\7\1\0"+
    "\1\7\1\u015d\10\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\11\7\1\u015e"+
    "\15\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\7\1\u015f\25\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\12\7\1\u0160\14\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\6\7\1\u0161\20\7\1\0"+
    "\1\7\1\0\12\7\6\0\1\7\1\u0162\3\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\27\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\12\7\1\u0163\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\15\7\1\u0164\11\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\5\7\1\u0165\21\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\5\7\1\u0166"+
    "\21\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\u0167\26\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\u0168\26\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\6\7\1\u0169\20\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\20\7\1\u016a\6\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\2\7\1\u016b"+
    "\24\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\12\7\1\u016c\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\12\7\1\u016d\14\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\12\7\1\u016e\14\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\12\7\1\u016f"+
    "\14\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\26\7\1\u0170\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\u0171"+
    "\1\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\7\1\u0172\25\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\6\7\1\u0173\20\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\1\7\1\u0174"+
    "\25\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\u0175\26\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\12\7\1\u0176\14\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\1\u0177\26\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\21\7\1\u0178\5\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\6\7\1\u0179"+
    "\20\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\17\7\1\u017a\7\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\u017b\4\0\2\7\22\0"+
    "\2\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\6\7\1\u017c\20\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\7\1\u017d\25\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\12\7\1\u017e"+
    "\14\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\1\u017f\1\7"+
    "\1\0\27\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\u0180"+
    "\1\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\11\7\1\u0181\15\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\7\1\u0182\25\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\6\7\1\u0183"+
    "\20\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\1\u0184\1\7"+
    "\1\0\27\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\u0185"+
    "\1\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\1\u0186\26\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\1\u0187\1\7\1\0\27\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\1\u0188\1\7\1\0\27\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\12\7\1\u0189\14\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\25\7"+
    "\1\u018a\1\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\u018b"+
    "\1\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\10\7\1\u018c\16\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\1\u018d\1\7\1\0\27\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\5\7\1\u018e\21\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\1\u018f\1\7\1\0"+
    "\27\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\1\u0190\1\7"+
    "\1\0\27\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\15\7\1\u0191\11\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\11\7\1\u0192\15\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\1\7\1\u0193\25\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\1\7"+
    "\1\u0194\25\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\7\1\u0195\25\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\5\7\1\u0196\21\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\1\7\1\u0197\25\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\1\u0198\1\7\1\0"+
    "\27\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\12\7\1\u0199\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\15\7\1\u019a\11\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\11\7\1\u019b\15\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\5\7\1\u019c"+
    "\21\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\10\7\1\u019d\16\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\1\u019e\1\7\1\0\27\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\13\7\1\u019f\13\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\12\7\1\u01a0\14\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\1\u01a1\1\7\1\0"+
    "\27\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\25\7\1\u01a2\1\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\10\7\1\u01a3\16\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\17\7\1\u01a4\7\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\3\7\1\u01a5"+
    "\23\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\u01a6\4\0\2\7\22\0\2\7\1\0"+
    "\27\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\6\7\1\u01a7\20\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\6\7\1\u01a8\20\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\u01a9\4\0"+
    "\2\7\22\0\2\7\1\0\27\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\10\7\1\u01aa\16\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\17\7\1\u01ab"+
    "\7\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\27\7\1\0\1\7\1\0\1\7\1\u01ac\10\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\11\7\1\u01ad\15\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\14\7\1\u01ae\12\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\3\7\1\u01af"+
    "\23\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\17\7\1\u01b0\7\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\14\7\1\u01b1\12\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\12\7\1\u01b2\14\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\12\7\1\u01b3"+
    "\14\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\12\7\1\u01b4\14\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\17\7\1\u01b5\7\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\7\1\u01b6\25\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\15\7\1\u01b7"+
    "\11\7\1\0\1\7\1\0\12\7\6\0\1\7\1\u01b8"+
    "\3\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\17\7\1\u01b9\7\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\10\7\1\u01ba\16\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\1\7\1\u01bb"+
    "\25\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\10\7\1\u01bc\16\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\12\7\1\u01bd\14\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\17\7\1\u01be\7\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\1\u01bf\1\7\1\0\27\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\12\7"+
    "\1\u01c0\14\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\1\u01c1"+
    "\1\7\1\0\27\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\12\7\1\u01c2\14\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\17\7\1\u01c3\7\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\6\7\1\u01c4"+
    "\20\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\1\u01c5\26\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\u01c6\26\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\6\7\1\u01c7\20\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\u01c8\26\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\13\7\1\u01c9\13\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\3\7"+
    "\1\u01ca\23\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\2\7\1\u01cb\24\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\11\7\1\u01cc\15\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\17\7\1\u01cd\7\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\17\7"+
    "\1\u01ce\7\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\17\7\1\u01cf\7\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\17\7\1\u01d0\7\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\10\7\1\u01d1\16\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\1\u01d2"+
    "\26\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\6\7\1\u01d3\20\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\15\7\1\u01d4\11\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\7\1\u01d5\25\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\6\7\1\u01d6"+
    "\20\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\3\7\1\u01d7\23\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\12\7\1\u01d8\14\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\2\7\1\0\1\7\1\u01d9\25\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\2\7\1\0\6\7\1\u01da"+
    "\20\7\1\0\1\7\1\0\12\7\6\0\5\7\1\0"+
    "\1\7\4\0\1\7\4\0\2\7\22\0\2\7\1\0"+
    "\13\7\1\u01db\13\7\1\0\1\7\1\0\12\7\6\0"+
    "\5\7\1\0\1\7\4\0\1\7\4\0\2\7\22\0"+
    "\2\7\1\0\17\7\1\u01dc\7\7\1\0\1\7\1\0"+
    "\12\7\6\0\5\7\1\0\1\7\4\0\1\7\4\0"+
    "\2\7\22\0\1\u01dd\1\7\1\0\27\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\1\u01de\1\7\1\0\27\7\1\0"+
    "\1\7\1\0\12\7\6\0\5\7\1\0\1\7\4\0"+
    "\1\7\4\0\2\7\22\0\1\u01df\1\7\1\0\27\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\17\7"+
    "\1\u01e0\7\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\15\7\1\u01e1\11\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\10\7\1\u01e2\16\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\10\7\1\u01e3\16\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\14\7"+
    "\1\u01e4\12\7\1\0\1\7\1\0\12\7\6\0\5\7"+
    "\1\0\1\7\4\0\1\7\4\0\2\7\22\0\2\7"+
    "\1\0\1\7\1\u01e5\25\7\1\0\1\7\1\0\12\7"+
    "\6\0\5\7\1\0\1\7\4\0\1\7\4\0\2\7"+
    "\22\0\2\7\1\0\17\7\1\u01e6\7\7\1\0\1\7"+
    "\1\0\12\7\6\0\5\7\1\0\1\7\4\0\1\7"+
    "\4\0\2\7\22\0\2\7\1\0\17\7\1\u01e7\7\7"+
    "\1\0\1\7\1\0\12\7\6\0\5\7\1\0\1\7"+
    "\4\0\1\7\4\0\2\7\22\0\2\7\1\0\12\7"+
    "\1\u01e8\14\7\1\0\1\7\1\0\12\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[30942];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\4\1\2\11\4\1\1\11"+
    "\4\1\13\11\1\1\1\11\1\1\2\11\2\1\1\11"+
    "\21\1\1\11\1\1\1\11\12\1\1\11\4\0\2\11"+
    "\1\0\1\1\1\11\66\1\2\11\1\1\2\0\1\11"+
    "\74\1\1\11\1\0\70\1\1\11\1\0\1\11\345\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[488];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _ResLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  _ResLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
      return;

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            }
          case 111: break;
          case 2: 
            { return NLS;
            }
          case 112: break;
          case 3: 
            { return WS;
            }
          case 113: break;
          case 4: 
            { return SYMBOL;
            }
          case 114: break;
          case 5: 
            { return IDENTIFIER;
            }
          case 115: break;
          case 6: 
            { return INT;
            }
          case 116: break;
          case 7: 
            { return MATH_SYMBOL;
            }
          case 117: break;
          case 8: 
            { return EQUALS;
            }
          case 118: break;
          case 9: 
            { return STRING;
            }
          case 119: break;
          case 10: 
            { return POUND;
            }
          case 120: break;
          case 11: 
            { return DOT;
            }
          case 121: break;
          case 12: 
            { return LBRACE;
            }
          case 122: break;
          case 13: 
            { return RBRACE;
            }
          case 123: break;
          case 14: 
            { return DBL_BAR;
            }
          case 124: break;
          case 15: 
            { return LANGLE;
            }
          case 125: break;
          case 16: 
            { return RANGLE;
            }
          case 126: break;
          case 17: 
            { return LCEIL;
            }
          case 127: break;
          case 18: 
            { return RCEIL;
            }
          case 128: break;
          case 19: 
            { return LCUP;
            }
          case 129: break;
          case 20: 
            { return RCUP;
            }
          case 130: break;
          case 21: 
            { return LBRACK;
            }
          case 131: break;
          case 22: 
            { return RBRACK;
            }
          case 132: break;
          case 23: 
            { return PRIME;
            }
          case 133: break;
          case 24: 
            { return BAR;
            }
          case 134: break;
          case 25: 
            { return LPAREN;
            }
          case 135: break;
          case 26: 
            { return RPAREN;
            }
          case 136: break;
          case 27: 
            { return COLON;
            }
          case 137: break;
          case 28: 
            { return SEMICOLON;
            }
          case 138: break;
          case 29: 
            { return COMMA;
            }
          case 139: break;
          case 30: 
            { return LAMBDA;
            }
          case 140: break;
          case 31: 
            { return NEQUALS;
            }
          case 141: break;
          case 32: 
            { return EXISTS;
            }
          case 142: break;
          case 33: 
            { return FORALL;
            }
          case 143: break;
          case 34: 
            { return LINE_COMMENT;
            }
          case 144: break;
          case 35: 
            { return MULTILINE_COMMENT;
            }
          case 145: break;
          case 36: 
            { return DBL_LBRACE;
            }
          case 146: break;
          case 37: 
            { return DBL_RBRACE;
            }
          case 147: break;
          case 38: 
            { return COLON_EQUALS;
            }
          case 148: break;
          case 39: 
            { return COLON_COLON;
            }
          case 149: break;
          case 40: 
            { return IS;
            }
          case 150: break;
          case 41: 
            { return IF;
            }
          case 151: break;
          case 42: 
            { return AS;
            }
          case 152: break;
          case 43: 
            { return BY;
            }
          case 153: break;
          case 44: 
            { return OF;
            }
          case 154: break;
          case 45: 
            { return DO;
            }
          case 155: break;
          case 46: 
            { return PROG_IF;
            }
          case 156: break;
          case 47: 
            { return TRIPLE_DOT;
            }
          case 157: break;
          case 48: 
            { return CHAR;
            }
          case 158: break;
          case 49: 
            { return COLON_EQUALS_COLON;
            }
          case 159: break;
          case 50: 
            { return END;
            }
          case 160: break;
          case 51: 
            { return FOR;
            }
          case 161: break;
          case 52: 
            { return VAR;
            }
          case 162: break;
          case 53: 
            { return IND_BASE;
            }
          case 163: break;
          case 54: 
            { return PARAM_TYPE;
            }
          case 164: break;
          case 55: 
            { return TRUE;
            }
          case 165: break;
          case 56: 
            { return THEN;
            }
          case 166: break;
          case 57: 
            { return ELSE;
            }
          case 167: break;
          case 58: 
            { return FROM;
            }
          case 168: break;
          case 59: 
            { return USES;
            }
          case 169: break;
          case 60: 
            { return WITH;
            }
          case 170: break;
          case 61: 
            { return FAMILY_TYPE;
            }
          case 171: break;
          case 62: 
            { return IND_HYPO;
            }
          case 172: break;
          case 63: 
            { return FALSE;
            }
          case 173: break;
          case 64: 
            { return WHILE;
            }
          case 174: break;
          case 65: 
            { return ALTERS;
            }
          case 175: break;
          case 66: 
            { return PRECIS;
            }
          case 176: break;
          case 67: 
            { return CLEARS;
            }
          case 177: break;
          case 68: 
            { return FAMILY;
            }
          case 178: break;
          case 69: 
            { return RECORD;
            }
          case 179: break;
          case 70: 
            { return NOTICE;
            }
          case 180: break;
          case 71: 
            { return CONCEPT;
            }
          case 181: break;
          case 72: 
            { return ENSURES;
            }
          case 182: break;
          case 73: 
            { return DEFINES;
            }
          case 183: break;
          case 74: 
            { return MODELED;
            }
          case 184: break;
          case 75: 
            { return UPDATES;
            }
          case 185: break;
          case 76: 
            { return THEOREM;
            }
          case 186: break;
          case 77: 
            { return REALIZED;
            }
          case 187: break;
          case 78: 
            { return RESTORES;
            }
          case 188: break;
          case 79: 
            { return REPLACES;
            }
          case 189: break;
          case 80: 
            { return REQUIRES;
            }
          case 190: break;
          case 81: 
            { return EXTENDED;
            }
          case 191: break;
          case 82: 
            { return EXEMPLAR;
            }
          case 192: break;
          case 83: 
            { return CHANGING;
            }
          case 193: break;
          case 84: 
            { return FACILITY;
            }
          case 194: break;
          case 85: 
            { return IMPLICIT;
            }
          case 195: break;
          case 86: 
            { return CART_PROD;
            }
          case 196: break;
          case 87: 
            { return COROLLARY;
            }
          case 197: break;
          case 88: 
            { return CHAINABLE;
            }
          case 198: break;
          case 89: 
            { return PROCEDURE;
            }
          case 199: break;
          case 90: 
            { return OTHERWISE;
            }
          case 200: break;
          case 91: 
            { return EVALUATES;
            }
          case 201: break;
          case 92: 
            { return PRESERVES;
            }
          case 202: break;
          case 93: 
            { return EXTENSION;
            }
          case 203: break;
          case 94: 
            { return INDUCTIVE;
            }
          case 204: break;
          case 95: 
            { return RECURSIVE;
            }
          case 205: break;
          case 96: 
            { return OPERATION;
            }
          case 206: break;
          case 97: 
            { return DECREASING;
            }
          case 207: break;
          case 98: 
            { return EXTERNALLY;
            }
          case 208: break;
          case 99: 
            { return DEFINITION;
            }
          case 209: break;
          case 100: 
            { return CATEGORICAL;
            }
          case 210: break;
          case 101: 
            { return CONSTRAINTS;
            }
          case 211: break;
          case 102: 
            { return EXTENDED_BY;
            }
          case 212: break;
          case 103: 
            { return CONVENTIONS;
            }
          case 213: break;
          case 104: 
            { return ENHANCEMENT;
            }
          case 214: break;
          case 105: 
            { return MAINTAINING;
            }
          case 215: break;
          case 106: 
            { return REALIZATION;
            }
          case 216: break;
          case 107: 
            { return WHICH_ENTAILS;
            }
          case 217: break;
          case 108: 
            { return INITIALIZATION;
            }
          case 218: break;
          case 109: 
            { return CLASSIFICATION;
            }
          case 219: break;
          case 110: 
            { return CORRESPONDENCE;
            }
          case 220: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
