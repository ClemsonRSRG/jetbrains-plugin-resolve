/* The following code was generated by JFlex 1.7.0-SNAPSHOT tweaked for IntelliJ platform */

package edu.clemson.resolve.jetbrains.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import edu.clemson.resolve.jetbrains.ResTypes;
import java.util.*;
import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static edu.clemson.resolve.jetbrains.RESOLVEParserDefinition.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0-SNAPSHOT
 * from the specification file <tt>ResLexer.flex</tt>
 */
class _ResLexer implements FlexLexer, ResTypes {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 14240 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\15\1\16\23\15"+
    "\1\17\1\15\1\20\1\21\12\15\1\22\10\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1"+
    "\33\1\34\1\23\1\35\1\36\2\23\1\15\1\37\3\23\1\40\10\23\1\41\1\42\20\23\1\43"+
    "\2\23\1\44\5\23\1\45\4\23\1\46\1\47\4\23\51\15\1\50\3\15\1\51\1\52\4\15\1"+
    "\53\12\23\1\54\u0381\23");

  /* The ZZ_CMAP_Y table has 2880 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\13\1\14\34"+
    "\13\1\15\1\16\1\17\10\1\1\20\1\21\1\22\1\23\1\24\3\22\1\25\10\13\1\26\12\13"+
    "\1\27\1\13\1\30\1\27\1\13\1\31\4\1\1\13\1\32\1\33\2\1\2\13\1\32\1\1\1\34\1"+
    "\27\5\13\1\35\1\36\1\37\1\1\1\40\1\13\1\1\1\41\5\13\1\42\1\43\1\44\1\13\1"+
    "\32\1\45\1\13\1\46\1\47\1\1\1\13\1\50\4\1\1\13\1\51\4\1\1\52\2\13\1\53\1\1"+
    "\1\54\1\55\1\27\1\56\1\57\1\60\1\61\1\62\1\63\1\55\1\16\1\64\1\57\1\60\1\65"+
    "\1\1\1\66\1\67\1\70\1\71\1\72\1\60\1\73\1\1\1\74\1\55\1\75\1\76\1\57\1\60"+
    "\1\73\1\1\1\63\1\55\1\43\1\77\1\100\1\101\1\102\1\1\1\74\1\67\1\1\1\103\1"+
    "\40\1\60\1\53\1\1\1\104\1\55\1\1\1\103\1\40\1\60\1\105\1\1\1\62\1\55\1\106"+
    "\1\103\1\40\1\13\1\107\1\62\1\110\1\55\1\111\1\112\1\113\1\13\1\114\1\115"+
    "\1\1\1\67\1\1\1\27\2\13\1\116\1\115\1\117\2\1\1\120\1\121\1\122\1\123\1\124"+
    "\1\125\2\1\1\74\1\1\1\117\1\1\1\126\1\13\1\127\1\1\1\130\7\1\2\13\1\32\1\110"+
    "\1\117\1\131\1\132\1\133\1\134\1\117\2\13\1\135\2\13\1\136\24\13\1\137\1\140"+
    "\2\13\1\137\2\13\1\141\1\142\1\14\3\13\1\142\3\13\1\32\2\1\1\13\1\1\5\13\1"+
    "\143\1\27\45\13\1\144\1\13\1\27\1\32\4\13\1\32\1\145\1\146\1\16\1\13\1\16"+
    "\1\13\1\16\1\146\1\74\3\13\1\147\1\1\1\150\1\117\2\1\1\117\5\13\1\31\2\13"+
    "\1\151\4\13\1\42\1\13\1\152\2\1\1\67\1\13\1\153\1\51\2\13\1\154\1\13\1\102"+
    "\1\117\2\1\1\13\1\115\3\13\1\51\2\1\2\117\1\155\5\1\1\112\2\13\1\147\1\156"+
    "\1\117\2\1\1\157\1\13\1\160\1\44\2\13\1\42\1\1\2\13\1\147\1\1\1\161\1\44\1"+
    "\13\1\153\6\1\1\162\1\163\14\13\4\1\21\13\1\143\2\13\1\143\1\164\1\13\1\153"+
    "\3\13\1\165\1\166\1\167\1\127\1\166\2\1\1\170\4\1\1\171\1\1\1\127\6\1\1\172"+
    "\1\173\1\174\1\175\1\176\3\1\1\177\7\1\1\200\33\201\103\1\1\201\30\1\1\202"+
    "\7\1\20\201\20\1\2\13\1\152\2\13\1\152\10\13\1\203\1\204\2\13\1\135\3\13\1"+
    "\205\1\1\1\13\1\115\4\206\4\1\1\110\35\1\1\207\2\1\1\210\1\27\4\13\1\211\1"+
    "\27\4\13\1\136\1\112\1\13\1\153\1\27\4\13\1\152\1\1\1\13\1\32\3\1\1\13\40"+
    "\1\133\13\1\42\4\1\135\13\1\42\2\1\10\13\1\127\4\1\2\13\1\153\20\13\1\127"+
    "\1\13\1\212\1\1\2\13\1\152\1\110\1\13\1\153\4\13\1\42\2\1\1\213\1\214\5\13"+
    "\1\215\1\13\1\153\1\31\3\1\1\213\1\216\1\13\1\33\1\1\3\13\1\147\1\214\2\13"+
    "\1\147\1\1\1\117\1\1\1\217\1\44\1\13\1\42\1\13\1\115\1\1\1\13\1\127\1\52\2"+
    "\13\1\33\1\110\1\117\1\220\1\221\2\13\1\50\1\1\1\222\1\117\1\13\1\223\3\13"+
    "\1\224\1\225\1\226\1\32\1\70\1\227\1\230\1\206\2\13\1\136\1\42\7\13\1\33\1"+
    "\117\72\13\1\147\1\13\1\231\2\13\1\154\120\1\26\13\1\153\6\13\1\102\2\1\1"+
    "\115\1\232\1\60\1\233\1\234\6\13\1\16\1\1\1\157\25\13\1\153\1\1\4\13\1\214"+
    "\2\13\1\31\2\1\1\154\7\1\1\220\7\13\1\127\1\1\1\117\1\27\1\32\1\27\1\32\1"+
    "\235\4\13\1\152\1\236\1\237\2\1\1\240\1\13\1\14\1\241\2\153\2\1\7\13\1\32"+
    "\30\1\1\13\1\127\3\13\1\74\2\1\2\13\1\1\1\13\1\242\2\13\1\42\1\13\1\153\2"+
    "\13\1\243\3\1\11\13\1\153\1\117\5\1\2\13\1\31\3\13\1\147\11\1\23\13\1\115"+
    "\1\13\1\42\1\31\11\1\1\244\2\13\1\245\1\13\1\42\1\13\1\115\1\13\1\152\4\1"+
    "\1\13\1\246\1\13\1\42\1\13\1\102\4\1\3\13\1\247\4\1\1\74\1\250\1\13\1\147"+
    "\2\1\1\13\1\127\1\13\1\127\2\1\1\126\1\13\1\51\1\1\3\13\1\42\1\13\1\42\1\13"+
    "\1\33\1\13\1\16\6\1\4\13\1\50\3\1\3\13\1\33\3\13\1\33\60\1\1\157\2\13\1\31"+
    "\2\1\1\67\1\1\1\157\2\13\2\1\1\13\1\50\1\117\1\157\1\13\1\115\1\67\1\1\2\13"+
    "\1\251\1\157\2\13\1\33\1\252\1\253\2\1\1\13\1\72\1\154\5\1\1\254\1\255\1\50"+
    "\2\13\1\152\1\1\1\117\1\76\1\57\1\60\1\73\1\1\1\256\1\16\21\1\3\13\1\1\1\257"+
    "\1\117\12\1\2\13\1\152\2\1\1\260\2\1\3\13\1\1\1\261\1\117\2\1\2\13\1\32\1"+
    "\1\1\117\3\1\1\13\1\102\1\1\1\117\26\1\4\13\1\117\1\110\34\1\3\13\1\50\20"+
    "\1\71\13\1\102\16\1\14\13\1\147\53\1\2\13\1\152\75\1\44\13\1\115\33\1\43\13"+
    "\1\50\1\13\1\152\1\117\6\1\1\13\1\153\1\1\3\13\1\1\1\147\1\117\1\157\1\262"+
    "\1\13\67\1\4\13\1\51\1\74\3\1\1\157\6\1\1\16\77\1\6\13\1\32\1\127\1\50\1\102"+
    "\66\1\5\13\1\220\3\13\1\146\1\263\1\264\1\265\3\13\1\266\1\267\1\13\1\270"+
    "\1\271\1\40\24\13\1\272\1\13\1\40\1\136\1\13\1\136\1\13\1\220\1\13\1\220\1"+
    "\152\1\13\1\152\1\13\1\60\1\13\1\60\1\13\1\273\3\274\14\13\1\51\123\1\1\265"+
    "\1\13\1\275\1\276\1\277\1\300\1\301\1\302\1\303\1\154\1\304\1\154\24\1\55"+
    "\13\1\115\2\1\103\13\1\51\15\13\1\153\150\13\1\16\25\1\41\13\1\153\36\1");

  /* The ZZ_CMAP_A table has 3152 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\3\1\2\1\1\1\4\1\2\22\0\1\3\1\15\1\17\4\0\1\23\1\32\1\33\1\16\1\15"+
    "\1\37\1\15\1\22\1\5\1\12\10\27\1\11\1\34\1\36\1\15\1\42\1\15\1\43\1\21\2\6"+
    "\1\51\1\66\1\67\1\74\2\6\1\76\5\6\1\100\1\54\1\6\1\102\1\6\1\104\1\26\1\105"+
    "\1\106\3\6\1\15\1\24\1\15\1\0\1\7\1\25\1\44\1\46\1\60\1\56\1\47\1\20\1\57"+
    "\1\62\1\40\2\6\1\61\1\72\1\63\1\55\1\64\1\103\1\52\1\45\1\53\1\71\1\65\1\101"+
    "\1\70\1\50\1\77\1\30\1\15\1\31\1\15\6\0\1\1\24\0\1\6\12\0\1\6\4\0\1\6\5\0"+
    "\27\6\1\0\12\6\4\0\14\6\16\0\5\6\7\0\1\6\1\0\1\6\1\0\5\14\1\13\2\14\2\13\4"+
    "\14\1\13\1\14\6\13\1\14\1\13\3\14\1\13\1\14\1\13\24\14\1\13\30\14\1\41\12"+
    "\14\1\13\11\14\2\6\10\0\6\6\1\0\26\6\2\0\1\6\6\0\10\6\10\0\13\6\5\0\3\6\15"+
    "\0\12\10\4\0\6\6\1\0\1\6\17\0\2\6\7\0\2\6\12\10\3\6\2\0\2\6\1\0\16\6\15\0"+
    "\11\6\13\0\1\6\16\0\12\10\6\6\4\0\2\6\4\0\1\6\5\0\6\6\4\0\1\6\11\0\1\6\3\0"+
    "\1\6\7\0\11\6\7\0\5\6\17\0\26\6\3\0\1\6\2\0\1\6\7\0\12\6\4\0\12\10\1\6\4\0"+
    "\10\6\2\0\2\6\2\0\26\6\1\0\7\6\1\0\1\6\3\0\4\6\3\0\1\6\20\0\1\6\15\0\2\6\1"+
    "\0\1\6\5\0\6\6\4\0\2\6\1\0\2\6\1\0\2\6\1\0\2\6\17\0\4\6\1\0\1\6\7\0\12\10"+
    "\2\0\3\6\20\0\11\6\1\0\3\6\1\0\16\6\1\0\2\6\1\0\5\6\3\0\1\6\2\0\1\6\30\0\1"+
    "\6\13\0\10\6\2\0\1\6\3\0\1\6\1\0\6\6\3\0\3\6\1\0\4\6\3\0\2\6\1\0\1\6\1\0\2"+
    "\6\3\0\2\6\3\0\3\6\3\0\14\6\13\0\10\6\1\0\2\6\10\0\3\6\5\0\4\6\1\0\5\6\3\0"+
    "\1\6\3\0\2\6\15\0\13\6\2\0\1\6\21\0\1\6\12\0\6\6\5\0\22\6\3\0\10\6\1\0\11"+
    "\6\1\0\1\6\2\0\7\6\11\0\1\6\1\0\2\6\14\0\12\10\7\0\2\6\1\0\1\6\2\0\2\6\1\0"+
    "\1\6\2\0\1\6\6\0\4\6\1\0\7\6\1\0\3\6\1\0\1\6\1\0\1\6\2\0\2\6\1\0\4\6\1\0\2"+
    "\6\11\0\1\6\2\0\5\6\1\0\1\6\11\0\12\10\2\0\14\6\1\0\24\6\13\0\5\6\3\0\6\6"+
    "\4\0\4\6\3\0\1\6\3\0\2\6\7\0\3\6\4\0\15\6\14\0\1\6\1\0\6\6\1\0\1\6\5\0\1\6"+
    "\2\0\13\6\1\0\15\6\1\0\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2\0\1\6\1\0\4\6\2\0\7\6"+
    "\1\0\1\6\1\0\4\6\2\0\16\6\2\0\6\6\2\0\15\6\2\0\1\6\1\0\10\6\7\0\15\6\1\0\6"+
    "\6\23\0\1\6\4\0\1\6\3\0\11\6\1\0\1\6\5\0\17\6\1\0\16\6\2\0\14\6\13\0\1\6\15"+
    "\0\7\6\7\0\16\6\15\0\2\6\12\10\3\0\3\6\11\0\4\6\1\0\4\6\3\0\2\6\11\0\10\6"+
    "\1\0\1\6\1\0\1\6\1\0\1\6\1\0\6\6\1\0\7\6\1\0\1\6\3\0\3\6\1\0\7\6\3\0\4\6\2"+
    "\0\6\6\14\0\2\1\7\0\1\6\15\0\1\6\2\0\1\6\4\0\1\6\2\0\12\6\1\0\1\6\3\0\5\6"+
    "\6\0\1\6\1\0\1\6\1\0\1\6\1\0\4\6\1\0\13\6\2\0\4\6\5\0\5\6\4\0\1\6\4\0\2\6"+
    "\13\0\1\75\2\13\1\73\34\13\2\0\1\35\15\0\5\6\6\0\4\6\3\0\2\6\14\0\10\6\7\0"+
    "\10\6\1\0\7\6\6\0\2\6\12\0\5\6\5\0\2\6\3\0\7\6\6\0\3\6\12\10\2\6\13\0\11\6"+
    "\2\0\27\6\2\0\7\6\1\0\3\6\1\0\4\6\1\0\4\6\2\0\6\6\3\0\1\6\1\0\1\6\2\0\5\6"+
    "\1\0\12\6\12\10\5\6\1\0\3\6\1\0\10\6\4\0\7\6\3\0\1\6\3\0\2\6\1\0\1\6\3\0\2"+
    "\6\2\0\5\6\2\0\1\6\1\0\1\6\30\0\3\6\3\0\6\6\2\0\6\6\2\0\6\6\11\0\7\6\4\0\5"+
    "\6\3\0\5\6\5\0\1\6\1\0\10\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0\2\6\1\0\12\6\6\0\12"+
    "\6\2\0\6\6\2\0\6\6\2\0\6\6\2\0\3\6\3\0\14\6\1\0\16\6\1\0\2\6\1\0\2\6\1\0\10"+
    "\6\6\0\4\6\4\0\16\6\2\0\1\6\1\0\14\6\1\0\2\6\3\0\1\6\2\0\4\6\1\0\2\6\12\0"+
    "\10\6\6\0\6\6\1\0\3\6\1\0\12\6\3\0\1\6\12\0\4\6\13\0\12\10\1\6\1\0\1\6\3\0"+
    "\7\6\1\0\1\6\1\0\4\6\1\0\17\6\1\0\2\6\14\0\3\6\4\0\2\6\1\0\1\6\20\0\4\6\10"+
    "\0\1\6\13\0\10\6\5\0\3\6\2\0\1\6\2\0\2\6\2\0\4\6\1\0\14\6\1\0\1\6\1\0\7\6"+
    "\1\0\21\6\1\0\4\6\2\0\10\6\1\0\7\6\1\0\14\6\1\0\4\6\1\0\5\6\1\0\1\6\3\0\14"+
    "\6\2\0\13\6\1\0\10\6\2\0\22\10\1\0\2\6\1\0\1\6\2\0\1\6\1\0\12\6\1\0\4\6\1"+
    "\0\1\6\1\0\1\6\6\0\1\6\4\0\1\6\1\0\1\6\1\0\1\6\1\0\3\6\1\0\2\6\1\0\1\6\2\0"+
    "\1\6\1\0\1\6\1\0\1\6\1\0\1\6\1\0\1\6\1\0\2\6\1\0\1\6\2\0\4\6\1\0\7\6\1\0\4"+
    "\6\1\0\4\6\1\0\1\6\1\0\12\6\1\0\5\6\1\0\3\6\1\0\5\6\1\0\5\6");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\1\4\1\5\2\6\2\7"+
    "\1\4\1\10\1\5\1\11\1\12\1\1\1\13\1\14"+
    "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\5"+
    "\1\24\1\25\22\5\1\26\1\5\1\27\7\5\1\30"+
    "\1\31\1\10\1\0\3\5\3\0\1\32\1\33\1\0"+
    "\1\34\1\35\1\36\1\37\2\5\1\40\1\5\1\0"+
    "\1\5\1\41\13\5\1\42\2\5\1\43\16\5\1\44"+
    "\12\5\2\31\3\5\1\45\1\46\1\47\1\1\2\0"+
    "\1\50\3\5\1\0\3\5\1\51\51\5\1\52\1\5"+
    "\2\31\1\4\2\5\1\53\1\54\1\0\3\5\1\55"+
    "\1\56\1\57\14\5\1\60\1\61\1\62\11\5\1\63"+
    "\4\5\1\64\10\5\1\65\3\5\1\66\2\5\1\31"+
    "\1\0\1\67\1\5\1\70\52\5\1\71\1\72\2\5"+
    "\1\73\15\5\1\74\5\5\1\75\4\5\1\26\5\5"+
    "\1\27\5\5\1\76\4\5\1\77\10\5\1\100\13\5"+
    "\1\101\1\5\1\102\1\5\1\103\7\5\1\104\3\5"+
    "\1\105\1\5\1\106\4\5\1\107\1\110\1\111\5\5"+
    "\1\112\4\5\1\113\1\5\1\114\6\5\1\115\2\5"+
    "\1\116\1\5\1\117\1\5\1\120\1\121\3\5\1\122"+
    "\1\5\1\123\1\5\1\124\1\5\1\125\1\5\1\126"+
    "\2\5\1\127\3\5\1\130\2\5\1\131\4\5\1\132"+
    "\1\133\1\134\1\135\1\5\1\136\1\137\11\5\1\140"+
    "\1\141\1\142\1\143";

  private static int [] zzUnpackAction() {
    int [] result = new int[457];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\107\0\216\0\107\0\216\0\325\0\u011c\0\u0163"+
    "\0\107\0\107\0\u011c\0\u01aa\0\u01f1\0\u0238\0\107\0\u027f"+
    "\0\u02c6\0\107\0\u030d\0\u0354\0\u039b\0\107\0\u03e2\0\107"+
    "\0\107\0\107\0\u0429\0\u011c\0\107\0\u0470\0\u04b7\0\u04fe"+
    "\0\u0545\0\u058c\0\u05d3\0\u061a\0\u0661\0\u06a8\0\u06ef\0\u0736"+
    "\0\u077d\0\u07c4\0\u080b\0\u0852\0\u0899\0\u08e0\0\u0927\0\107"+
    "\0\u096e\0\107\0\u09b5\0\u09fc\0\u0a43\0\u0a8a\0\u0ad1\0\u0b18"+
    "\0\u0b5f\0\u0ba6\0\u0bed\0\107\0\u0c34\0\u0c7b\0\u0cc2\0\u0d09"+
    "\0\u0d50\0\u0d97\0\u0dde\0\107\0\107\0\u0e25\0\107\0\u0e6c"+
    "\0\u011c\0\u011c\0\u0eb3\0\u0efa\0\u011c\0\u0f41\0\u0f88\0\u0fcf"+
    "\0\u011c\0\u1016\0\u105d\0\u10a4\0\u10eb\0\u1132\0\u1179\0\u11c0"+
    "\0\u1207\0\u124e\0\u1295\0\u12dc\0\u011c\0\u1323\0\u136a\0\u011c"+
    "\0\u13b1\0\u13f8\0\u143f\0\u1486\0\u14cd\0\u1514\0\u155b\0\u15a2"+
    "\0\u15e9\0\u1630\0\u1677\0\u16be\0\u1705\0\u174c\0\u011c\0\u1793"+
    "\0\u17da\0\u1821\0\u1868\0\u18af\0\u18f6\0\u193d\0\u1984\0\u19cb"+
    "\0\u1a12\0\u1a59\0\u1aa0\0\u1ae7\0\u1b2e\0\u1b75\0\u011c\0\107"+
    "\0\107\0\u0d97\0\u1bbc\0\u1c03\0\107\0\u1c4a\0\u1c91\0\u1cd8"+
    "\0\u1d1f\0\u1d66\0\u1dad\0\u1df4\0\u011c\0\u1e3b\0\u1e82\0\u1ec9"+
    "\0\u1f10\0\u1f57\0\u1f9e\0\u1fe5\0\u202c\0\u2073\0\u20ba\0\u2101"+
    "\0\u2148\0\u218f\0\u21d6\0\u221d\0\u2264\0\u22ab\0\u22f2\0\u2339"+
    "\0\u2380\0\u23c7\0\u240e\0\u2455\0\u249c\0\u24e3\0\u252a\0\u2571"+
    "\0\u25b8\0\u25ff\0\u2646\0\u268d\0\u26d4\0\u271b\0\u2762\0\u27a9"+
    "\0\u27f0\0\u2837\0\u287e\0\u28c5\0\u290c\0\u2953\0\u011c\0\u299a"+
    "\0\u29e1\0\u01aa\0\u1aa0\0\u2a28\0\u2a6f\0\u011c\0\107\0\u2ab6"+
    "\0\u2afd\0\u2b44\0\u2b8b\0\107\0\u011c\0\u011c\0\u2bd2\0\u2c19"+
    "\0\u2c60\0\u2ca7\0\u2cee\0\u2d35\0\u2d7c\0\u2dc3\0\u2e0a\0\u2e51"+
    "\0\u2e98\0\u2edf\0\u011c\0\u011c\0\u011c\0\u2f26\0\u2f6d\0\u2fb4"+
    "\0\u2ffb\0\u3042\0\u3089\0\u30d0\0\u3117\0\u315e\0\u011c\0\u31a5"+
    "\0\u31ec\0\u3233\0\u327a\0\u011c\0\u32c1\0\u3308\0\u334f\0\u3396"+
    "\0\u33dd\0\u3424\0\u346b\0\u34b2\0\u011c\0\u34f9\0\u3540\0\u3587"+
    "\0\u011c\0\u35ce\0\u3615\0\107\0\u29e1\0\u011c\0\u365c\0\107"+
    "\0\u36a3\0\u36ea\0\u3731\0\u3778\0\u37bf\0\u3806\0\u384d\0\u3894"+
    "\0\u38db\0\u3922\0\u3969\0\u39b0\0\u39f7\0\u3a3e\0\u3a85\0\u3acc"+
    "\0\u3b13\0\u3b5a\0\u3ba1\0\u3be8\0\u3c2f\0\u3c76\0\u3cbd\0\u3d04"+
    "\0\u3d4b\0\u3d92\0\u3dd9\0\u3e20\0\u3e67\0\u3eae\0\u3ef5\0\u3f3c"+
    "\0\u3f83\0\u3fca\0\u4011\0\u4058\0\u409f\0\u40e6\0\u412d\0\u4174"+
    "\0\u41bb\0\u4202\0\u011c\0\u011c\0\u4249\0\u4290\0\u011c\0\u42d7"+
    "\0\u431e\0\u4365\0\u43ac\0\u43f3\0\u443a\0\u4481\0\u44c8\0\u450f"+
    "\0\u4556\0\u459d\0\u45e4\0\u462b\0\u011c\0\u4672\0\u46b9\0\u4700"+
    "\0\u4747\0\u478e\0\u011c\0\u47d5\0\u481c\0\u4863\0\u48aa\0\u011c"+
    "\0\u48f1\0\u4938\0\u497f\0\u49c6\0\u4a0d\0\u011c\0\u4a54\0\u4a9b"+
    "\0\u4ae2\0\u4b29\0\u4b70\0\u011c\0\u4bb7\0\u4bfe\0\u4c45\0\u4c8c"+
    "\0\u011c\0\u4cd3\0\u4d1a\0\u4d61\0\u4da8\0\u4def\0\u4e36\0\u4e7d"+
    "\0\u4ec4\0\u011c\0\u4f0b\0\u4f52\0\u4f99\0\u4fe0\0\u5027\0\u506e"+
    "\0\u50b5\0\u50fc\0\u5143\0\u518a\0\u51d1\0\u011c\0\u5218\0\u011c"+
    "\0\u525f\0\u011c\0\u52a6\0\u52ed\0\u5334\0\u537b\0\u53c2\0\u5409"+
    "\0\u5450\0\u011c\0\u5497\0\u54de\0\u5525\0\u011c\0\u556c\0\u55b3"+
    "\0\u55fa\0\u5641\0\u5688\0\u56cf\0\u011c\0\u011c\0\u011c\0\u5716"+
    "\0\u575d\0\u57a4\0\u57eb\0\u5832\0\u011c\0\u5879\0\u58c0\0\u5907"+
    "\0\u594e\0\u011c\0\u5995\0\u011c\0\u59dc\0\u5a23\0\u5a6a\0\u5ab1"+
    "\0\u5af8\0\u5b3f\0\u011c\0\u5b86\0\u5bcd\0\u011c\0\u5c14\0\u011c"+
    "\0\u5c5b\0\u011c\0\u011c\0\u5ca2\0\u5ce9\0\u5d30\0\u011c\0\u5d77"+
    "\0\u011c\0\u5dbe\0\u011c\0\u5e05\0\u011c\0\u5e4c\0\u011c\0\u5e93"+
    "\0\u5eda\0\u011c\0\u5f21\0\u5f68\0\u5faf\0\u011c\0\u5ff6\0\u603d"+
    "\0\u011c\0\u6084\0\u60cb\0\u6112\0\u6159\0\u011c\0\u011c\0\u011c"+
    "\0\u011c\0\u61a0\0\u011c\0\u011c\0\u61e7\0\u622e\0\u6275\0\u62bc"+
    "\0\u6303\0\u634a\0\u6391\0\u63d8\0\u641f\0\u011c\0\u011c\0\u011c"+
    "\0\u011c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[457];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\2\7\1\2\1\10"+
    "\1\11\1\12\1\13\2\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\2\1\22\1\7\1\10\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\14"+
    "\1\35\1\36\1\37\1\40\1\41\1\7\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\7\1\50\1\51\1\52"+
    "\1\7\1\53\1\7\1\54\1\55\1\7\1\56\1\57"+
    "\1\60\1\61\1\62\1\63\1\7\1\64\1\65\1\66"+
    "\1\7\1\67\1\70\1\71\110\0\2\3\1\0\1\3"+
    "\107\0\1\72\7\0\1\14\1\73\23\0\1\14\52\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\27\7\1\0\1\7\1\0\11\7\11\0"+
    "\2\10\14\0\1\10\64\0\1\14\7\0\2\14\23\0"+
    "\1\14\44\0\2\15\1\0\14\15\1\74\4\15\1\75"+
    "\62\15\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\1\76\5\7\1\77\2\7"+
    "\1\100\15\7\1\0\1\7\1\0\11\7\22\0\1\101"+
    "\64\0\24\102\1\103\62\102\30\0\1\104\107\0\1\105"+
    "\115\0\1\106\102\0\1\107\5\0\1\110\52\0\5\7"+
    "\1\0\1\7\3\0\1\111\5\0\2\7\10\0\2\7"+
    "\2\0\1\7\1\112\15\7\1\113\6\7\1\114\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\7\1\115"+
    "\13\7\1\116\11\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\1\0\1\117\3\0"+
    "\2\7\10\0\2\7\2\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\1\120\3\7\1\121\22\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\15\7"+
    "\1\122\1\7\1\123\1\7\1\124\2\7\1\125\2\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\126"+
    "\10\7\1\127\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\130\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\4\7\1\131\1\7\1\132"+
    "\7\7\1\133\10\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\6\7\1\134\20\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\135\5\0"+
    "\2\7\10\0\2\7\2\0\7\7\1\136\17\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\3\7\1\137"+
    "\5\7\1\140\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\11\7\1\141\3\7\1\142\1\143\10\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\144"+
    "\26\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\4\7\1\145\22\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\6\7\1\146\20\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\3\7\1\147\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\24\7\1\150"+
    "\2\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\1\7\1\151\16\7\1\152\6\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\1\153\10\7\1\154\15\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\155"+
    "\10\7\1\156\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\157\5\0\2\7\10\0"+
    "\2\7\2\0\17\7\1\160\6\7\1\161\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\20\7\1\162\6\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\1\163\1\7\2\0"+
    "\16\7\1\164\10\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\165\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\4\7\1\166\11\7\1\167"+
    "\10\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\1\170\26\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\16\7\1\171\10\7\1\0\1\7\1\0\11\7"+
    "\2\72\1\0\104\72\5\172\1\73\7\172\1\73\1\173"+
    "\23\172\1\73\44\172\12\0\1\15\4\0\2\15\3\0"+
    "\1\15\1\0\2\15\14\0\1\15\1\0\1\15\3\0"+
    "\2\15\7\0\1\15\1\0\1\15\2\0\2\15\23\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\15\7\1\174\10\7\1\175\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\11\7\1\176\15\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\6\7"+
    "\1\177\20\7\1\0\1\7\1\0\11\7\22\0\1\200"+
    "\107\0\1\201\103\0\1\102\2\0\1\202\1\102\17\0"+
    "\1\102\1\0\1\102\3\0\2\102\7\0\1\102\1\0"+
    "\1\102\43\0\1\203\15\0\1\204\102\0\1\205\60\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\1\206\1\7\2\0\27\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\20\7\1\207\6\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\7\7\1\210\17\7"+
    "\1\0\1\7\1\0\11\7\53\0\1\211\41\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\1\7\1\212\25\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\1\7\1\213\25\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\1\7\1\214\10\7"+
    "\1\215\14\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\1\216\26\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\217\3\7\1\220\17\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\6\7\1\221"+
    "\1\222\17\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\6\7\1\223\10\7\1\224\7\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\1\7\1\225\16\7"+
    "\1\226\6\7\1\0\1\7\1\0\5\7\1\227\3\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\20\7\1\230\6\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\25\7\1\231\1\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\3\7"+
    "\1\232\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\3\7\1\233\5\7\1\234\15\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\16\7\1\235\10\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\14\7"+
    "\1\236\12\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\6\7\1\237\10\7\1\240\7\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\3\7\1\241\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\242"+
    "\26\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\26\7\1\243\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\20\7\1\244\6\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\3\7\1\245\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\246"+
    "\5\0\2\7\10\0\2\7\2\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\1\247\1\7\2\0\7\7\1\250"+
    "\17\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\3\7\1\251\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\12\7\1\252\14\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\1\253\1\7\2\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\12\7\1\254\14\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\14\7"+
    "\1\255\12\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\6\7\1\256\20\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\12\7\1\257\14\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\20\7\1\260\6\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\3\7"+
    "\1\261\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\7\7\1\262\17\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\1\263\1\7\2\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\14\7\1\264\12\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\20\7\1\265"+
    "\6\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\3\7\1\266\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\6\7\1\267\20\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\1\270\1\7\2\0\27\7\1\0\1\7"+
    "\1\0\11\7\16\172\1\271\75\172\1\272\7\172\1\73"+
    "\1\273\23\172\1\73\44\172\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\7"+
    "\1\274\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\1\275"+
    "\1\7\2\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\26\7\1\276\1\0\1\7\1\0\11\7"+
    "\33\0\1\277\75\0\1\300\72\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\7\7"+
    "\1\301\17\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\15\7\1\302\11\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\3\7\1\303\23\7\1\0\1\7"+
    "\1\0\11\7\22\0\1\304\72\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\3\7"+
    "\1\305\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\3\7\1\306\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\25\7\1\307\1\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\15\7\1\310\11\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\26\7"+
    "\1\311\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\3\7\1\312\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\7\7\1\313\17\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\3\7\1\314\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\11\7\1\315"+
    "\15\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\1\7\1\316\12\7\1\317\12\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\7\7\1\320\17\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\15\7\1\321"+
    "\11\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\25\7\1\322\1\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\323\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\3\7\1\324\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\17\7\1\325"+
    "\7\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\14\7\1\326\12\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\14\7\1\327\12\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\3\7\1\330\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\6\7\1\331"+
    "\20\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\6\7\1\332\20\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\1\7\1\316\17\7\1\333\5\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\334\26\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\17\7"+
    "\1\335\7\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\2\7\1\336\24\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\11\7\1\337\15\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\1\7\1\340\25\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\1\341\1\7\2\0"+
    "\27\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\1\7\1\342\25\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\343\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\1\7\1\344\25\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\345\26\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\17\7"+
    "\1\346\7\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\3\7\1\347\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\1\350\1\7\2\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\1\351\26\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\25\7\1\352\1\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\15\7"+
    "\1\353\11\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\6\7\1\354\20\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\16\7\1\355\10\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\14\7\1\356\12\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\11\7"+
    "\1\357\13\7\1\360\1\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\3\7\1\361\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\11\7\1\362\15\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\15\7"+
    "\1\363\11\7\1\0\1\7\1\0\11\7\5\172\1\364"+
    "\10\172\1\365\70\172\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\3\7\1\366"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\15\7\1\367\11\7\1\0\1\7\1\0\11\7\33\0"+
    "\1\370\61\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\1\371\1\7\2\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\3\7\1\372\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\6\7"+
    "\1\373\20\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\6\7\1\374\20\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\25\7\1\375\1\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\20\7\1\376\6\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\6\7"+
    "\1\377\10\7\1\u0100\7\7\1\0\1\7\1\0\11\7"+
    "\6\0\1\7\1\u0101\3\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\13\7\1\u0102\13\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\15\7"+
    "\1\u0103\11\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\7\7\1\u0104\17\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\3\7\1\u0105\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\11\7\1\u0106\15\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\u0107"+
    "\26\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\1\u0108\1\7"+
    "\2\0\27\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\1\u0109"+
    "\1\7\2\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u010a\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\6\7\1\u010b\20\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\3\7\1\u010c"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\3\7\1\u010d\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u010e\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\6\7\1\u010f\20\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\13\7\1\u0110"+
    "\13\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\12\7\1\u0111\14\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u0112\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\17\7\1\u0113\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\7\7\1\u0114"+
    "\17\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\17\7\1\u0115\7\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\7\7\1\u0116\17\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\7\7\1\u0117\17\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\15\7\1\u0118"+
    "\11\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\15\7\1\u0119\11\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\15\7\1\u011a\11\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\14\7\1\u011b\12\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\1\u011c\1\7\2\0\3\7"+
    "\1\u011d\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\1\u011e\26\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\16\7\1\u011f\10\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\6\7\1\u0120\20\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\6\7\1\u0121"+
    "\20\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\6\7\1\u0122\20\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u0123\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\4\7\1\u0124\22\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\u0125\26\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\26\7"+
    "\1\u0126\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\1\7\1\u0127\25\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u0128\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\1\u0129\26\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\15\7\1\u012a\11\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\17\7"+
    "\1\u012b\7\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\12\7\1\u012c\14\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\10\7\1\u012d\16\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\11\7\1\u012e\15\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\15\7"+
    "\1\u012f\11\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\6\7\1\u0130\20\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\20\7\1\u0131\6\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\6\7\1\u0132\20\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\14\7"+
    "\1\u0133\12\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\6\7\1\u0134\20\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\1\7\1\u0135\25\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\12\7\1\u0136\14\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\27\7"+
    "\1\0\1\7\1\0\3\7\1\u0137\5\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\1\u0138\26\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\1\7\1\u0139\25\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\17\7\1\u013a\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\7\1\u013b"+
    "\25\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\1\u013c\1\7"+
    "\2\0\27\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\1\34\26\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\6\7\1\u013d\20\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\1\u013e\1\7\2\0\3\7\1\u013f\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\7"+
    "\1\u0140\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\1\7\1\u0141\25\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\3\7\1\u0142\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\1\u0143\26\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\3\7\1\u0144"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\1\u0145\1\7"+
    "\2\0\27\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\15\7\1\u0146\11\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\7\7\1\u0147\17\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\14\7\1\u0148\12\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\26\7"+
    "\1\u0149\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\7\7\1\u014a\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\1\7\1\u014b\3\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\12\7\1\u014c\14\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\7\1\u014d"+
    "\25\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\3\7\1\u014e\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\15\7\1\u014f\11\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\3\7\1\u0150\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\7\1\u0151"+
    "\25\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\7\7\1\u0152\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\1\u0153\26\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\1\u0154\26\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\3\7\1\u0155\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\6\7\1\u0156"+
    "\20\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\6\7\1\u0157\20\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\1\u0158\26\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\1\u0159\26\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\7\7\1\u015a\17\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\3\7\1\u015b"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\3\7\1\u015c\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u015d\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\25\7\1\u015e\1\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\1\u015f\1\7\2\0\27\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\7"+
    "\1\u0160\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\20\7\1\u0161\6\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\7\7\1\u0162\17\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\17\7\1\u0163\7\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\21\7"+
    "\1\u0164\5\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\7\7\1\u0165\17\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\1\7\1\u0166\25\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\1\u0167\1\7\2\0\27\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\7\1\u0168"+
    "\25\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\1\u0169\1\7"+
    "\2\0\27\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\12\7\1\u016a\14\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\7\7\1\u016b\17\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\1\u016c\1\7\2\0\27\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\1\u016d\1\7\2\0\27\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\3\7"+
    "\1\u016e\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\1\u016f"+
    "\1\7\2\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u0170\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\1\u0171\1\7\2\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\26\7\1\u0172\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\1\u0173\1\7\2\0\27\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\17\7"+
    "\1\u0174\7\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\3\7\1\u0175\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\6\7\1\u0176\20\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\15\7\1\u0177\11\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\12\7"+
    "\1\u0178\14\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\11\7\1\u0179\15\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\1\u017a\1\7\2\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\6\7\1\u017b\20\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\1\u017c\1\7\2\0\27\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\7"+
    "\1\u017d\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\1\7\1\u017e\25\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\1\7\1\u017f\25\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\6\7\1\u0180\20\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\7"+
    "\1\u0181\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\1\u0182"+
    "\1\7\2\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\11\7\1\u0183\15\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\1\u0184\1\7\2\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\13\7\1\u0185\13\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\3\7"+
    "\1\u0186\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\1\u0187"+
    "\1\7\2\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\11\7\1\u0188\15\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\17\7\1\u0189\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\4\7\1\u018a"+
    "\22\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\21\7\1\u018b\5\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\7\7\1\u018c\17\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\17\7\1\u018d\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\11\7\1\u018e"+
    "\15\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\17\7\1\u018f\7\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\21\7\1\u0190\5\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\27\7\1\0\1\7\1\0"+
    "\1\7\1\u0191\7\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\7\7\1\u0192"+
    "\17\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\1\7\1\u0193\25\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\15\7\1\u0194\11\7\1\0\1\7\1\0"+
    "\11\7\6\0\1\7\1\u0195\3\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\27\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\12\7\1\u0196"+
    "\14\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\14\7\1\u0197\12\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\4\7\1\u0198\22\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\17\7\1\u0199\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\3\7\1\u019a"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\3\7\1\u019b\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\17\7\1\u019c\7\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\17\7\1\u019d\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\11\7\1\u019e"+
    "\15\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\1\7\1\u019f\25\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\11\7\1\u01a0\15\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\17\7\1\u01a1\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\1\u01a2\1\7\2\0\27\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\3\7"+
    "\1\u01a3\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\7\7\1\u01a4\17\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\17\7\1\u01a5\7\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\7\7\1\u01a6\17\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\3\7"+
    "\1\u01a7\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\1\u01a8\26\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u01a9\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\4\7\1\u01aa\22\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\2\7\1\u01ab"+
    "\24\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\1\u01ac\26\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\7\7\1\u01ad\17\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\13\7\1\u01ae\13\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\12\7\1\u01af\14\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\17\7"+
    "\1\u01b0\7\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\17\7\1\u01b1\7\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\17\7\1\u01b2\7\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\1\u01b3\26\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\u01b4\26\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\7\7"+
    "\1\u01b5\17\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\12\7\1\u01b6\14\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\4\7\1\u01b7\22\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\15\7\1\u01b8\11\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\1\7"+
    "\1\u01b9\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\2\7"+
    "\2\0\3\7\1\u01ba\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\1\7\1\u01bb\25\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\2\7\2\0\13\7\1\u01bc\13\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\10\0\2\7\2\0\7\7"+
    "\1\u01bd\17\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\10\0\1\u01be"+
    "\1\7\2\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\1\u01bf\1\7\2\0\27\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\10\0\2\7\2\0\17\7\1\u01c0\7\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\10\0\1\u01c1\1\7\2\0\27\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\15\7\1\u01c2"+
    "\11\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\11\7\1\u01c3\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\14\7\1\u01c4\12\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\11\7\1\u01c5\15\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\10\0\2\7\2\0\1\7\1\u01c6"+
    "\25\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\10\0\2\7\2\0"+
    "\17\7\1\u01c7\7\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\10\0"+
    "\2\7\2\0\3\7\1\u01c8\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\10\0\2\7\2\0\17\7\1\u01c9\7\7\1\0"+
    "\1\7\1\0\11\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[25702];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\4\1\2\11\4\1\1\11"+
    "\2\1\1\11\3\1\1\11\1\1\3\11\2\1\1\11"+
    "\22\1\1\11\1\1\1\11\11\1\1\11\1\0\3\1"+
    "\3\0\2\11\1\0\1\11\7\1\1\0\60\1\2\11"+
    "\1\1\2\0\1\11\3\1\1\0\65\1\1\11\1\0"+
    "\3\1\1\11\57\1\1\11\1\0\2\1\1\11\321\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[457];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _ResLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  _ResLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
      return;

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            }
          case 100: break;
          case 2: 
            { return NLS;
            }
          case 101: break;
          case 3: 
            { return WS;
            }
          case 102: break;
          case 4: 
            { return SYMBOL;
            }
          case 103: break;
          case 5: 
            { return IDENTIFIER;
            }
          case 104: break;
          case 6: 
            { return INT;
            }
          case 105: break;
          case 7: 
            { return MATH_SYMBOL;
            }
          case 106: break;
          case 8: 
            { return STRING;
            }
          case 107: break;
          case 9: 
            { return AT;
            }
          case 108: break;
          case 10: 
            { return DOT;
            }
          case 109: break;
          case 11: 
            { return BACKTICK;
            }
          case 110: break;
          case 12: 
            { return LBRACE;
            }
          case 111: break;
          case 13: 
            { return RBRACE;
            }
          case 112: break;
          case 14: 
            { return LPAREN;
            }
          case 113: break;
          case 15: 
            { return RPAREN;
            }
          case 114: break;
          case 16: 
            { return COLON;
            }
          case 115: break;
          case 17: 
            { return HYPER_COLON;
            }
          case 116: break;
          case 18: 
            { return SEMICOLON;
            }
          case 117: break;
          case 19: 
            { return COMMA;
            }
          case 118: break;
          case 20: 
            { return LAMBDA;
            }
          case 119: break;
          case 21: 
            { return QV;
            }
          case 120: break;
          case 22: 
            { return EXISTS;
            }
          case 121: break;
          case 23: 
            { return FORALL;
            }
          case 122: break;
          case 24: 
            { return LINE_COMMENT;
            }
          case 123: break;
          case 25: 
            { return MULTILINE_COMMENT;
            }
          case 124: break;
          case 26: 
            { return DBL_LBRACE;
            }
          case 125: break;
          case 27: 
            { return DBL_RBRACE;
            }
          case 126: break;
          case 28: 
            { return COLON_COLON;
            }
          case 127: break;
          case 29: 
            { return COLON_EQUALS;
            }
          case 128: break;
          case 30: 
            { return IF;
            }
          case 129: break;
          case 31: 
            { return IS;
            }
          case 130: break;
          case 32: 
            { return AS;
            }
          case 131: break;
          case 33: 
            { return BY;
            }
          case 132: break;
          case 34: 
            { return OF;
            }
          case 133: break;
          case 35: 
            { return DO;
            }
          case 134: break;
          case 36: 
            { return PROG_IF;
            }
          case 135: break;
          case 37: 
            { return FOR;
            }
          case 136: break;
          case 38: 
            { return TRIPLE_DOT;
            }
          case 137: break;
          case 39: 
            { return CHAR;
            }
          case 138: break;
          case 40: 
            { return COLON_EQUALS_COLON;
            }
          case 139: break;
          case 41: 
            { return END;
            }
          case 140: break;
          case 42: 
            { return VAR;
            }
          case 141: break;
          case 43: 
            { return FROM;
            }
          case 142: break;
          case 44: 
            { return IND_BASE;
            }
          case 143: break;
          case 45: 
            { return SUCH_THAT;
            }
          case 144: break;
          case 46: 
            { return BASE;
            }
          case 145: break;
          case 47: 
            { return ELSE;
            }
          case 146: break;
          case 48: 
            { return PARAM_TYPE;
            }
          case 147: break;
          case 49: 
            { return TRUE;
            }
          case 148: break;
          case 50: 
            { return THEN;
            }
          case 149: break;
          case 51: 
            { return HYPO;
            }
          case 150: break;
          case 52: 
            { return USES;
            }
          case 151: break;
          case 53: 
            { return WITH;
            }
          case 152: break;
          case 54: 
            { return FAMILY_TYPE;
            }
          case 153: break;
          case 55: 
            { return FALSE;
            }
          case 154: break;
          case 56: 
            { return IND_HYPO;
            }
          case 155: break;
          case 57: 
            { return WHILE;
            }
          case 156: break;
          case 58: 
            { return FAMILY;
            }
          case 157: break;
          case 59: 
            { return ALTERS;
            }
          case 158: break;
          case 60: 
            { return PRECIS;
            }
          case 159: break;
          case 61: 
            { return CLEARS;
            }
          case 160: break;
          case 62: 
            { return RECORD;
            }
          case 161: break;
          case 63: 
            { return ENSURES;
            }
          case 162: break;
          case 64: 
            { return CONCEPT;
            }
          case 163: break;
          case 65: 
            { return DEFINES;
            }
          case 164: break;
          case 66: 
            { return UPDATES;
            }
          case 165: break;
          case 67: 
            { return MODELED;
            }
          case 166: break;
          case 68: 
            { return THEOREM;
            }
          case 167: break;
          case 69: 
            { return EXEMPLAR;
            }
          case 168: break;
          case 70: 
            { return EXTENDED;
            }
          case 169: break;
          case 71: 
            { return RESTORES;
            }
          case 170: break;
          case 72: 
            { return REPLACES;
            }
          case 171: break;
          case 73: 
            { return REQUIRES;
            }
          case 172: break;
          case 74: 
            { return CHANGING;
            }
          case 173: break;
          case 75: 
            { return FACILITY;
            }
          case 174: break;
          case 76: 
            { return IMPLICIT;
            }
          case 175: break;
          case 77: 
            { return EVALUATES;
            }
          case 176: break;
          case 78: 
            { return CART_PROD;
            }
          case 177: break;
          case 79: 
            { return COROLLARY;
            }
          case 178: break;
          case 80: 
            { return PROCEDURE;
            }
          case 179: break;
          case 81: 
            { return OTHERWISE;
            }
          case 180: break;
          case 82: 
            { return PRESERVES;
            }
          case 181: break;
          case 83: 
            { return EXTENSION;
            }
          case 182: break;
          case 84: 
            { return INDUCTIVE;
            }
          case 183: break;
          case 85: 
            { return OPERATION;
            }
          case 184: break;
          case 86: 
            { return RECURSIVE;
            }
          case 185: break;
          case 87: 
            { return EXTERNALLY;
            }
          case 186: break;
          case 88: 
            { return DECREASING;
            }
          case 187: break;
          case 89: 
            { return DEFINITION;
            }
          case 188: break;
          case 90: 
            { return IMPLEMENTED;
            }
          case 189: break;
          case 91: 
            { return EXTENDED_BY;
            }
          case 190: break;
          case 92: 
            { return CATEGORICAL;
            }
          case 191: break;
          case 93: 
            { return CONSTRAINTS;
            }
          case 192: break;
          case 94: 
            { return CONVENTIONS;
            }
          case 193: break;
          case 95: 
            { return MAINTAINING;
            }
          case 194: break;
          case 96: 
            { return WHICH_ENTAILS;
            }
          case 195: break;
          case 97: 
            { return INITIALIZATION;
            }
          case 196: break;
          case 98: 
            { return CORRESPONDENCE;
            }
          case 197: break;
          case 99: 
            { return IMPLEMENTATION;
            }
          case 198: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
