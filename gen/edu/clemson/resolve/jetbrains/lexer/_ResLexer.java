/* The following code was generated by JFlex 1.7.0-SNAPSHOT tweaked for IntelliJ platform */

package edu.clemson.resolve.jetbrains.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import edu.clemson.resolve.jetbrains.ResTypes;
import java.util.*;
import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static edu.clemson.resolve.jetbrains.RESOLVEParserDefinition.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0-SNAPSHOT
 * from the specification file <tt>ResLexer.flex</tt>
 */
class _ResLexer implements FlexLexer, ResTypes {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 14304 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\15\1\16\23\15"+
    "\1\17\1\15\1\20\1\21\12\15\1\22\10\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1"+
    "\33\1\34\1\23\1\35\1\36\2\23\1\15\1\37\3\23\1\40\10\23\1\41\1\42\20\23\1\43"+
    "\2\23\1\44\5\23\1\45\4\23\1\46\1\47\4\23\51\15\1\50\3\15\1\51\1\52\4\15\1"+
    "\53\12\23\1\54\u0381\23");

  /* The ZZ_CMAP_Y table has 2880 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\13\1\14\34"+
    "\13\1\15\1\16\1\17\10\1\1\20\1\21\1\22\1\23\1\24\3\22\1\25\10\13\1\26\12\13"+
    "\1\27\1\13\1\30\1\27\1\13\1\31\4\1\1\13\1\32\1\33\2\1\2\13\1\32\1\1\1\34\1"+
    "\27\5\13\1\35\1\36\1\37\1\1\1\40\1\13\1\1\1\41\5\13\1\42\1\43\1\44\1\13\1"+
    "\32\1\45\1\13\1\46\1\47\1\1\1\13\1\50\4\1\1\13\1\51\4\1\1\52\2\13\1\53\1\1"+
    "\1\54\1\55\1\27\1\56\1\57\1\60\1\61\1\62\1\63\1\55\1\16\1\64\1\57\1\60\1\65"+
    "\1\1\1\66\1\67\1\70\1\71\1\72\1\60\1\73\1\1\1\74\1\55\1\75\1\76\1\57\1\60"+
    "\1\73\1\1\1\63\1\55\1\43\1\77\1\100\1\101\1\102\1\1\1\74\1\67\1\1\1\103\1"+
    "\40\1\60\1\53\1\1\1\104\1\55\1\1\1\103\1\40\1\60\1\105\1\1\1\62\1\55\1\106"+
    "\1\103\1\40\1\13\1\107\1\62\1\110\1\55\1\111\1\112\1\113\1\13\1\114\1\115"+
    "\1\1\1\67\1\1\1\27\2\13\1\116\1\115\1\117\2\1\1\120\1\121\1\122\1\123\1\124"+
    "\1\125\2\1\1\74\1\1\1\117\1\1\1\126\1\13\1\127\1\1\1\130\7\1\2\13\1\32\1\110"+
    "\1\117\1\131\1\132\1\133\1\134\1\117\2\13\1\135\2\13\1\136\24\13\1\137\1\140"+
    "\2\13\1\137\2\13\1\141\1\142\1\14\3\13\1\142\3\13\1\32\2\1\1\13\1\1\5\13\1"+
    "\143\1\27\45\13\1\144\1\13\1\27\1\32\4\13\1\32\1\145\1\146\1\16\1\13\1\16"+
    "\1\13\1\16\1\146\1\74\3\13\1\147\1\1\1\150\1\117\2\1\1\117\5\13\1\31\2\13"+
    "\1\151\4\13\1\42\1\13\1\152\2\1\1\67\1\13\1\153\1\51\2\13\1\154\1\13\1\102"+
    "\1\117\2\1\1\13\1\115\3\13\1\51\2\1\2\117\1\155\5\1\1\112\2\13\1\147\1\156"+
    "\1\117\2\1\1\157\1\13\1\160\1\44\2\13\1\42\1\1\2\13\1\147\1\1\1\161\1\44\1"+
    "\13\1\153\6\1\1\162\1\163\14\13\4\1\21\13\1\143\2\13\1\143\1\164\1\13\1\153"+
    "\3\13\1\165\1\166\1\167\1\127\1\166\2\1\1\170\1\171\3\1\1\172\1\1\1\127\6"+
    "\1\1\173\1\174\1\175\1\176\1\177\3\1\1\200\7\1\1\201\1\202\1\203\31\202\100"+
    "\1\4\202\30\1\1\204\7\1\20\202\20\1\2\13\1\152\2\13\1\152\10\13\1\205\1\206"+
    "\2\13\1\135\3\13\1\207\1\1\1\13\1\115\4\210\4\1\1\110\35\1\1\211\2\1\1\212"+
    "\1\27\4\13\1\213\1\27\4\13\1\136\1\112\1\13\1\153\1\27\4\13\1\152\1\1\1\13"+
    "\1\32\3\1\1\13\40\1\133\13\1\42\4\1\135\13\1\42\2\1\10\13\1\127\4\1\2\13\1"+
    "\153\20\13\1\127\1\13\1\214\1\1\2\13\1\152\1\110\1\13\1\153\4\13\1\42\2\1"+
    "\1\215\1\216\5\13\1\217\1\13\1\153\1\31\3\1\1\215\1\220\1\13\1\33\1\1\3\13"+
    "\1\147\1\216\2\13\1\147\1\1\1\117\1\1\1\221\1\44\1\13\1\42\1\13\1\115\1\1"+
    "\1\13\1\127\1\52\2\13\1\33\1\110\1\117\1\222\1\223\2\13\1\50\1\1\1\224\1\117"+
    "\1\13\1\225\3\13\1\226\1\227\1\230\1\32\1\70\1\231\1\232\1\210\2\13\1\136"+
    "\1\42\7\13\1\33\1\117\72\13\1\147\1\13\1\233\2\13\1\154\120\1\26\13\1\153"+
    "\6\13\1\102\2\1\1\115\1\234\1\60\1\235\1\236\6\13\1\16\1\1\1\157\25\13\1\153"+
    "\1\1\4\13\1\216\2\13\1\31\2\1\1\154\7\1\1\222\7\13\1\127\1\1\1\117\1\27\1"+
    "\32\1\27\1\32\1\237\4\13\1\152\1\240\1\241\2\1\1\242\1\13\1\14\1\243\2\153"+
    "\2\1\7\13\1\32\30\1\1\13\1\127\3\13\1\74\2\1\2\13\1\1\1\13\1\244\2\13\1\42"+
    "\1\13\1\153\2\13\1\245\3\1\11\13\1\153\1\117\5\1\2\13\1\31\3\13\1\147\11\1"+
    "\23\13\1\115\1\13\1\42\1\31\11\1\1\246\2\13\1\247\1\13\1\42\1\13\1\115\1\13"+
    "\1\152\4\1\1\13\1\250\1\13\1\42\1\13\1\102\4\1\3\13\1\251\4\1\1\74\1\252\1"+
    "\13\1\147\2\1\1\13\1\127\1\13\1\127\2\1\1\126\1\13\1\51\1\1\3\13\1\42\1\13"+
    "\1\42\1\13\1\33\1\13\1\16\6\1\4\13\1\50\3\1\3\13\1\33\3\13\1\33\60\1\1\157"+
    "\2\13\1\31\2\1\1\67\1\1\1\157\2\13\2\1\1\13\1\50\1\117\1\157\1\13\1\115\1"+
    "\67\1\1\2\13\1\253\1\157\2\13\1\33\1\254\1\255\2\1\1\13\1\72\1\154\5\1\1\256"+
    "\1\257\1\50\2\13\1\152\1\1\1\117\1\76\1\57\1\60\1\73\1\1\1\260\1\16\21\1\3"+
    "\13\1\1\1\261\1\117\12\1\2\13\1\152\2\1\1\262\2\1\3\13\1\1\1\263\1\117\2\1"+
    "\2\13\1\32\1\1\1\117\3\1\1\13\1\102\1\1\1\117\26\1\4\13\1\117\1\110\34\1\3"+
    "\13\1\50\20\1\71\13\1\102\16\1\14\13\1\147\53\1\2\13\1\152\75\1\44\13\1\115"+
    "\33\1\43\13\1\50\1\13\1\152\1\117\6\1\1\13\1\153\1\1\3\13\1\1\1\147\1\117"+
    "\1\157\1\264\1\13\67\1\4\13\1\51\1\74\3\1\1\157\6\1\1\16\77\1\6\13\1\32\1"+
    "\127\1\50\1\102\66\1\5\13\1\222\3\13\1\146\1\265\1\266\1\267\3\13\1\270\1"+
    "\271\1\13\1\272\1\273\1\40\24\13\1\274\1\13\1\40\1\136\1\13\1\136\1\13\1\222"+
    "\1\13\1\222\1\152\1\13\1\152\1\13\1\60\1\13\1\60\1\13\1\275\3\276\14\13\1"+
    "\51\123\1\1\267\1\13\1\277\1\300\1\301\1\302\1\303\1\304\1\305\1\154\1\306"+
    "\1\154\24\1\55\13\1\115\2\1\103\13\1\51\15\13\1\153\150\13\1\16\25\1\41\13"+
    "\1\153\36\1");

  /* The ZZ_CMAP_A table has 3184 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\3\1\2\1\1\1\4\1\2\22\0\1\3\1\15\1\17\4\0\1\23\1\33\1\34\1\16\1\15"+
    "\1\41\1\15\1\22\1\5\1\12\10\27\1\11\1\36\1\40\1\15\1\44\1\15\1\45\1\21\2\6"+
    "\1\54\1\71\1\72\1\77\2\6\1\101\5\6\1\103\1\57\1\6\1\105\1\6\1\107\1\26\1\110"+
    "\1\111\3\6\1\15\1\24\1\15\1\0\1\7\1\25\1\47\1\51\1\63\1\61\1\52\1\67\1\62"+
    "\1\65\1\42\2\6\1\64\1\75\1\66\1\60\1\70\1\106\1\55\1\50\1\56\1\74\1\20\1\104"+
    "\1\73\1\53\1\102\1\30\1\15\1\31\1\15\6\0\1\1\24\0\1\6\12\0\1\6\4\0\1\6\5\0"+
    "\27\6\1\0\12\6\4\0\14\6\16\0\5\6\7\0\1\6\1\0\1\6\1\0\5\14\1\13\2\14\2\13\4"+
    "\14\1\13\1\14\6\13\1\14\1\13\3\14\1\13\1\14\1\13\24\14\1\13\30\14\1\43\12"+
    "\14\1\13\11\14\2\6\10\0\6\6\1\0\26\6\2\0\1\6\6\0\10\6\10\0\13\6\5\0\3\6\15"+
    "\0\12\10\4\0\6\6\1\0\1\6\17\0\2\6\7\0\2\6\12\10\3\6\2\0\2\6\1\0\16\6\15\0"+
    "\11\6\13\0\1\6\16\0\12\10\6\6\4\0\2\6\4\0\1\6\5\0\6\6\4\0\1\6\11\0\1\6\3\0"+
    "\1\6\7\0\11\6\7\0\5\6\17\0\26\6\3\0\1\6\2\0\1\6\7\0\12\6\4\0\12\10\1\6\4\0"+
    "\10\6\2\0\2\6\2\0\26\6\1\0\7\6\1\0\1\6\3\0\4\6\3\0\1\6\20\0\1\6\15\0\2\6\1"+
    "\0\1\6\5\0\6\6\4\0\2\6\1\0\2\6\1\0\2\6\1\0\2\6\17\0\4\6\1\0\1\6\7\0\12\10"+
    "\2\0\3\6\20\0\11\6\1\0\3\6\1\0\16\6\1\0\2\6\1\0\5\6\3\0\1\6\2\0\1\6\30\0\1"+
    "\6\13\0\10\6\2\0\1\6\3\0\1\6\1\0\6\6\3\0\3\6\1\0\4\6\3\0\2\6\1\0\1\6\1\0\2"+
    "\6\3\0\2\6\3\0\3\6\3\0\14\6\13\0\10\6\1\0\2\6\10\0\3\6\5\0\4\6\1\0\5\6\3\0"+
    "\1\6\3\0\2\6\15\0\13\6\2\0\1\6\21\0\1\6\12\0\6\6\5\0\22\6\3\0\10\6\1\0\11"+
    "\6\1\0\1\6\2\0\7\6\11\0\1\6\1\0\2\6\14\0\12\10\7\0\2\6\1\0\1\6\2\0\2\6\1\0"+
    "\1\6\2\0\1\6\6\0\4\6\1\0\7\6\1\0\3\6\1\0\1\6\1\0\1\6\2\0\2\6\1\0\4\6\1\0\2"+
    "\6\11\0\1\6\2\0\5\6\1\0\1\6\11\0\12\10\2\0\14\6\1\0\24\6\13\0\5\6\3\0\6\6"+
    "\4\0\4\6\3\0\1\6\3\0\2\6\7\0\3\6\4\0\15\6\14\0\1\6\1\0\6\6\1\0\1\6\5\0\1\6"+
    "\2\0\13\6\1\0\15\6\1\0\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2\0\1\6\1\0\4\6\2\0\7\6"+
    "\1\0\1\6\1\0\4\6\2\0\16\6\2\0\6\6\2\0\15\6\2\0\1\6\1\0\10\6\7\0\15\6\1\0\6"+
    "\6\23\0\1\6\4\0\1\6\3\0\11\6\1\0\1\6\5\0\17\6\1\0\16\6\2\0\14\6\13\0\1\6\15"+
    "\0\7\6\7\0\16\6\15\0\2\6\12\10\3\0\3\6\11\0\4\6\1\0\4\6\3\0\2\6\11\0\10\6"+
    "\1\0\1\6\1\0\1\6\1\0\1\6\1\0\6\6\1\0\7\6\1\0\1\6\3\0\3\6\1\0\7\6\3\0\4\6\2"+
    "\0\6\6\14\0\2\1\10\0\1\32\16\0\1\6\15\0\1\6\2\13\1\14\4\13\1\14\2\13\12\14"+
    "\1\13\1\14\3\13\5\14\6\13\1\14\1\13\1\14\1\13\1\14\1\13\4\14\1\13\13\14\2"+
    "\13\4\14\5\13\5\14\4\13\1\14\1\13\3\0\2\6\13\0\1\100\2\13\1\76\7\13\1\46\27"+
    "\13\1\35\14\13\2\0\1\37\15\0\5\6\6\0\4\6\3\0\2\6\14\0\10\6\7\0\10\6\1\0\7"+
    "\6\6\0\2\6\12\0\5\6\5\0\2\6\3\0\7\6\6\0\3\6\12\10\2\6\13\0\11\6\2\0\27\6\2"+
    "\0\7\6\1\0\3\6\1\0\4\6\1\0\4\6\2\0\6\6\3\0\1\6\1\0\1\6\2\0\5\6\1\0\12\6\12"+
    "\10\5\6\1\0\3\6\1\0\10\6\4\0\7\6\3\0\1\6\3\0\2\6\1\0\1\6\3\0\2\6\2\0\5\6\2"+
    "\0\1\6\1\0\1\6\30\0\3\6\3\0\6\6\2\0\6\6\2\0\6\6\11\0\7\6\4\0\5\6\3\0\5\6\5"+
    "\0\1\6\1\0\10\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0\2\6\1\0\12\6\6\0\12\6\2\0\6\6"+
    "\2\0\6\6\2\0\6\6\2\0\3\6\3\0\14\6\1\0\16\6\1\0\2\6\1\0\2\6\1\0\10\6\6\0\4"+
    "\6\4\0\16\6\2\0\1\6\1\0\14\6\1\0\2\6\3\0\1\6\2\0\4\6\1\0\2\6\12\0\10\6\6\0"+
    "\6\6\1\0\3\6\1\0\12\6\3\0\1\6\12\0\4\6\13\0\12\10\1\6\1\0\1\6\3\0\7\6\1\0"+
    "\1\6\1\0\4\6\1\0\17\6\1\0\2\6\14\0\3\6\4\0\2\6\1\0\1\6\20\0\4\6\10\0\1\6\13"+
    "\0\10\6\5\0\3\6\2\0\1\6\2\0\2\6\2\0\4\6\1\0\14\6\1\0\1\6\1\0\7\6\1\0\21\6"+
    "\1\0\4\6\2\0\10\6\1\0\7\6\1\0\14\6\1\0\4\6\1\0\5\6\1\0\1\6\3\0\14\6\2\0\13"+
    "\6\1\0\10\6\2\0\22\10\1\0\2\6\1\0\1\6\2\0\1\6\1\0\12\6\1\0\4\6\1\0\1\6\1\0"+
    "\1\6\6\0\1\6\4\0\1\6\1\0\1\6\1\0\1\6\1\0\3\6\1\0\2\6\1\0\1\6\2\0\1\6\1\0\1"+
    "\6\1\0\1\6\1\0\1\6\1\0\1\6\1\0\2\6\1\0\1\6\2\0\4\6\1\0\7\6\1\0\4\6\1\0\4\6"+
    "\1\0\1\6\1\0\12\6\1\0\5\6\1\0\3\6\1\0\5\6\1\0\5\6");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\1\4\1\5\2\6\2\7"+
    "\1\4\1\10\1\11\1\12\1\1\1\13\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\5\1\26\1\27\1\30\22\5\1\31\1\5\1\32"+
    "\7\5\1\33\1\34\1\10\4\0\1\35\1\36\1\0"+
    "\1\37\1\40\1\41\1\5\1\42\1\5\1\43\2\5"+
    "\1\44\16\5\1\45\1\5\1\46\22\5\1\47\11\5"+
    "\2\34\1\50\1\51\1\1\2\0\1\52\7\5\1\53"+
    "\33\5\1\54\22\5\1\55\1\5\2\34\1\4\1\56"+
    "\1\0\3\5\1\57\1\5\1\60\15\5\1\61\1\62"+
    "\1\63\11\5\1\64\2\5\1\65\4\5\1\66\10\5"+
    "\1\67\3\5\1\70\2\5\1\34\1\0\1\71\33\5"+
    "\1\72\22\5\1\73\2\5\1\74\17\5\1\75\5\5"+
    "\1\76\1\5\1\77\3\5\1\31\5\5\1\32\5\5"+
    "\1\100\5\5\1\101\7\5\1\102\15\5\1\103\1\5"+
    "\1\104\1\5\1\105\7\5\1\106\3\5\1\107\1\5"+
    "\1\110\6\5\1\111\1\112\1\113\5\5\1\114\4\5"+
    "\1\115\1\5\1\116\6\5\1\117\2\5\1\120\1\5"+
    "\1\121\2\5\1\122\1\123\1\124\3\5\1\125\1\5"+
    "\1\126\1\5\1\127\1\5\1\130\1\5\1\131\2\5"+
    "\1\132\4\5\1\133\2\5\1\134\4\5\1\135\1\136"+
    "\1\137\1\140\2\5\1\141\1\142\13\5\1\143\1\144"+
    "\1\145\1\146\1\147";

  private static int [] zzUnpackAction() {
    int [] result = new int[477];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\112\0\224\0\112\0\224\0\336\0\u0128\0\u0172"+
    "\0\112\0\112\0\u0128\0\u01bc\0\u0206\0\112\0\u0250\0\u029a"+
    "\0\112\0\u02e4\0\u032e\0\112\0\u0378\0\112\0\112\0\u03c2"+
    "\0\112\0\112\0\112\0\u040c\0\u0128\0\112\0\112\0\u0456"+
    "\0\u04a0\0\u04ea\0\u0534\0\u057e\0\u05c8\0\u0612\0\u065c\0\u06a6"+
    "\0\u06f0\0\u073a\0\u0784\0\u07ce\0\u0818\0\u0862\0\u08ac\0\u08f6"+
    "\0\u0940\0\112\0\u098a\0\112\0\u09d4\0\u0a1e\0\u0a68\0\u0ab2"+
    "\0\u0afc\0\u0b46\0\u0b90\0\u0bda\0\u0c24\0\112\0\u0c6e\0\u0cb8"+
    "\0\u0d02\0\u0d4c\0\112\0\112\0\u0d96\0\112\0\u0de0\0\u0128"+
    "\0\u0e2a\0\u0128\0\u0e74\0\u0128\0\u0ebe\0\u0f08\0\u0128\0\u0f52"+
    "\0\u0f9c\0\u0fe6\0\u1030\0\u107a\0\u10c4\0\u110e\0\u1158\0\u11a2"+
    "\0\u11ec\0\u1236\0\u1280\0\u12ca\0\u1314\0\u0128\0\u135e\0\u0128"+
    "\0\u13a8\0\u13f2\0\u143c\0\u1486\0\u14d0\0\u151a\0\u1564\0\u15ae"+
    "\0\u15f8\0\u1642\0\u168c\0\u16d6\0\u1720\0\u176a\0\u17b4\0\u17fe"+
    "\0\u1848\0\u1892\0\u0128\0\u18dc\0\u1926\0\u1970\0\u19ba\0\u1a04"+
    "\0\u1a4e\0\u1a98\0\u1ae2\0\u1b2c\0\u1b76\0\u1bc0\0\112\0\112"+
    "\0\u0d02\0\u1c0a\0\u1c54\0\112\0\u1c9e\0\u1ce8\0\u1d32\0\u1d7c"+
    "\0\u1dc6\0\u1e10\0\u1e5a\0\u0128\0\u1ea4\0\u1eee\0\u1f38\0\u1f82"+
    "\0\u1fcc\0\u2016\0\u2060\0\u20aa\0\u20f4\0\u213e\0\u2188\0\u21d2"+
    "\0\u221c\0\u2266\0\u22b0\0\u22fa\0\u2344\0\u238e\0\u23d8\0\u2422"+
    "\0\u246c\0\u24b6\0\u2500\0\u254a\0\u2594\0\u25de\0\u2628\0\u0128"+
    "\0\u2672\0\u26bc\0\u2706\0\u2750\0\u279a\0\u27e4\0\u282e\0\u2878"+
    "\0\u28c2\0\u290c\0\u2956\0\u29a0\0\u29ea\0\u2a34\0\u2a7e\0\u2ac8"+
    "\0\u2b12\0\u2b5c\0\u0128\0\u2ba6\0\u2bf0\0\u01bc\0\u1bc0\0\112"+
    "\0\u2c3a\0\u2c84\0\u2cce\0\u2d18\0\u0128\0\u2d62\0\u0128\0\u2dac"+
    "\0\u2df6\0\u2e40\0\u2e8a\0\u2ed4\0\u2f1e\0\u2f68\0\u2fb2\0\u2ffc"+
    "\0\u3046\0\u3090\0\u30da\0\u3124\0\u0128\0\u0128\0\u0128\0\u316e"+
    "\0\u31b8\0\u3202\0\u324c\0\u3296\0\u32e0\0\u332a\0\u3374\0\u33be"+
    "\0\u0128\0\u3408\0\u3452\0\u0128\0\u349c\0\u34e6\0\u3530\0\u357a"+
    "\0\u0128\0\u35c4\0\u360e\0\u3658\0\u36a2\0\u36ec\0\u3736\0\u3780"+
    "\0\u37ca\0\u0128\0\u3814\0\u385e\0\u38a8\0\u0128\0\u38f2\0\u393c"+
    "\0\112\0\u2bf0\0\112\0\u3986\0\u39d0\0\u3a1a\0\u3a64\0\u3aae"+
    "\0\u3af8\0\u3b42\0\u3b8c\0\u3bd6\0\u3c20\0\u3c6a\0\u3cb4\0\u3cfe"+
    "\0\u3d48\0\u3d92\0\u3ddc\0\u3e26\0\u3e70\0\u3eba\0\u3f04\0\u3f4e"+
    "\0\u3f98\0\u3fe2\0\u402c\0\u4076\0\u40c0\0\u410a\0\u0128\0\u4154"+
    "\0\u419e\0\u41e8\0\u4232\0\u427c\0\u42c6\0\u4310\0\u435a\0\u43a4"+
    "\0\u43ee\0\u4438\0\u4482\0\u44cc\0\u4516\0\u4560\0\u45aa\0\u45f4"+
    "\0\u463e\0\u0128\0\u4688\0\u46d2\0\u0128\0\u471c\0\u4766\0\u47b0"+
    "\0\u47fa\0\u4844\0\u488e\0\u48d8\0\u4922\0\u496c\0\u49b6\0\u4a00"+
    "\0\u4a4a\0\u4a94\0\u4ade\0\u4b28\0\u0128\0\u4b72\0\u4bbc\0\u4c06"+
    "\0\u4c50\0\u4c9a\0\u0128\0\u4ce4\0\u0128\0\u4d2e\0\u4d78\0\u4dc2"+
    "\0\u0128\0\u4e0c\0\u4e56\0\u4ea0\0\u4eea\0\u4f34\0\u0128\0\u4f7e"+
    "\0\u4fc8\0\u5012\0\u505c\0\u50a6\0\u0128\0\u50f0\0\u513a\0\u5184"+
    "\0\u51ce\0\u5218\0\u0128\0\u5262\0\u52ac\0\u52f6\0\u5340\0\u538a"+
    "\0\u53d4\0\u541e\0\u0128\0\u5468\0\u54b2\0\u54fc\0\u5546\0\u5590"+
    "\0\u55da\0\u5624\0\u566e\0\u56b8\0\u5702\0\u574c\0\u5796\0\u57e0"+
    "\0\u0128\0\u582a\0\u0128\0\u5874\0\u0128\0\u58be\0\u5908\0\u5952"+
    "\0\u599c\0\u59e6\0\u5a30\0\u5a7a\0\u0128\0\u5ac4\0\u5b0e\0\u5b58"+
    "\0\u0128\0\u5ba2\0\u5bec\0\u5c36\0\u5c80\0\u5cca\0\u5d14\0\u5d5e"+
    "\0\u5da8\0\u0128\0\u0128\0\u0128\0\u5df2\0\u5e3c\0\u5e86\0\u5ed0"+
    "\0\u5f1a\0\u0128\0\u5f64\0\u5fae\0\u5ff8\0\u6042\0\u0128\0\u608c"+
    "\0\u0128\0\u60d6\0\u6120\0\u616a\0\u61b4\0\u61fe\0\u6248\0\u0128"+
    "\0\u6292\0\u62dc\0\u0128\0\u6326\0\u0128\0\u6370\0\u63ba\0\u0128"+
    "\0\u0128\0\u0128\0\u6404\0\u644e\0\u6498\0\u0128\0\u64e2\0\u0128"+
    "\0\u652c\0\u0128\0\u6576\0\u0128\0\u65c0\0\u0128\0\u660a\0\u6654"+
    "\0\u0128\0\u669e\0\u66e8\0\u6732\0\u677c\0\u0128\0\u67c6\0\u6810"+
    "\0\u0128\0\u685a\0\u68a4\0\u68ee\0\u6938\0\u0128\0\u0128\0\u0128"+
    "\0\u0128\0\u6982\0\u69cc\0\u0128\0\u0128\0\u6a16\0\u6a60\0\u6aaa"+
    "\0\u6af4\0\u6b3e\0\u6b88\0\u6bd2\0\u6c1c\0\u6c66\0\u6cb0\0\u6cfa"+
    "\0\u0128\0\u0128\0\u0128\0\u0128\0\u0128";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[477];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\2\7\1\2\1\10"+
    "\1\11\1\12\1\13\2\14\1\15\1\7\1\16\1\17"+
    "\1\20\1\2\1\21\1\7\1\10\1\22\1\23\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\14\1\36\1\37\1\40\1\7\1\41\1\42"+
    "\1\7\1\43\1\44\1\45\1\46\1\47\1\50\1\7"+
    "\1\51\1\52\1\53\1\7\1\54\1\55\1\56\1\57"+
    "\1\7\1\60\1\61\1\62\1\63\1\64\1\65\1\7"+
    "\1\66\1\67\1\70\1\7\1\71\1\72\1\73\113\0"+
    "\2\3\1\0\1\3\112\0\1\74\7\0\1\14\1\75"+
    "\25\0\1\14\53\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\27\7\1\0\1\7"+
    "\1\0\11\7\11\0\2\10\14\0\1\10\67\0\1\14"+
    "\7\0\2\14\25\0\1\14\45\0\2\15\1\0\14\15"+
    "\1\76\4\15\1\77\65\15\22\0\1\100\67\0\24\101"+
    "\1\102\65\101\30\0\1\103\112\0\1\104\122\0\1\105"+
    "\105\0\1\106\5\0\1\107\53\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\7"+
    "\1\110\15\7\1\111\1\112\5\7\1\113\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\7\1\114\13\7"+
    "\1\115\11\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\1\116\3\7\1\117\22\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\120\5\0"+
    "\2\7\12\0\2\7\3\0\15\7\1\121\1\7\1\122"+
    "\4\7\1\123\2\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\124\10\7\1\125\3\7\1\126\1\127"+
    "\10\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\3\7\1\130\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\4\7\1\131\1\7\1\132\7\7\1\133"+
    "\10\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\6\7\1\134\20\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\7\7\1\135\10\7\1\136\6\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\3\7\1\137"+
    "\5\7\1\140\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\11\7\1\141\3\7\1\142\1\143\10\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\144"+
    "\26\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\4\7\1\145\22\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\146\5\7\1\147\2\7\1\150\15\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\6\7"+
    "\1\151\20\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\3\7\1\152\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\24\7\1\153\2\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\7\1\154\17\7"+
    "\1\155\5\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\1\156\10\7\1\157\15\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\160\10\7\1\161\15\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\17\7"+
    "\1\162\1\163\5\7\1\164\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\21\7\1\165\5\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\1\166\1\7\3\0\16\7\1\167"+
    "\10\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\3\7\1\170\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\4\7\1\171\11\7\1\172\10\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\1\173\26\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\16\7"+
    "\1\174\10\7\1\0\1\7\1\0\11\7\2\74\1\0"+
    "\107\74\5\175\1\75\7\175\1\75\1\176\25\175\1\75"+
    "\45\175\12\0\1\15\4\0\2\15\3\0\1\15\1\0"+
    "\2\15\17\0\1\15\1\0\1\15\3\0\2\15\7\0"+
    "\2\15\3\0\2\15\37\0\1\177\112\0\1\200\106\0"+
    "\1\101\2\0\1\201\1\101\22\0\1\101\1\0\1\101"+
    "\3\0\2\101\7\0\2\101\44\0\1\202\17\0\1\203"+
    "\105\0\1\204\61\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\1\205\1\7\3\0\27\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\21\7\1\206"+
    "\5\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\7\7\1\207\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\7\1\210\25\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\211\26\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\7\1\212\25\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\7"+
    "\1\213\10\7\1\214\14\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\3\7\1\215\3\7\1\216\17\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\6\7"+
    "\1\217\1\220\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\6\7\1\221\10\7\1\222\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\1\223\26\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\224"+
    "\26\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\1\7\1\225\17\7\1\226\5\7\1\0\1\7\1\0"+
    "\5\7\1\227\3\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\21\7\1\230"+
    "\5\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\25\7\1\231\1\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\3\7\1\232\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\3\7\1\233\5\7\1\234"+
    "\15\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\16\7\1\235\10\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\14\7\1\236\12\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\6\7\1\237\10\7\1\240"+
    "\7\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\3\7\1\241\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\242\26\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\26\7\1\243\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\21\7\1\244\5\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\15\7\1\245"+
    "\10\7\1\246\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\11\7\1\247\15\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\6\7\1\250\20\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\251\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\20\7"+
    "\1\252\6\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\1\253"+
    "\1\7\3\0\7\7\1\254\17\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\3\7\1\255\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\12\7\1\256"+
    "\14\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\1\257\1\7"+
    "\3\0\27\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\12\7\1\260\14\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\14\7\1\261\12\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\6\7\1\262\20\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\12\7"+
    "\1\263\14\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\21\7\1\264\5\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\3\7\1\265\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\7\7\1\266\17\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\1\267\1\7\3\0"+
    "\27\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\14\7\1\270\12\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\21\7\1\271\5\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\3\7\1\272\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\6\7\1\273"+
    "\20\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\1\274\1\7"+
    "\3\0\27\7\1\0\1\7\1\0\11\7\16\175\1\275"+
    "\100\175\1\276\7\175\1\75\1\277\25\175\1\75\45\175"+
    "\34\0\1\300\77\0\1\301\75\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\7\7"+
    "\1\302\17\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\15\7\1\303\11\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\3\7\1\304\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\305\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\15\7"+
    "\1\306\11\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\3\7\1\307\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\25\7\1\310\1\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\26\7\1\311\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\3\7\1\312"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\7\7\1\313\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\3\7\1\314\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\11\7\1\315\15\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\1\7\1\316"+
    "\12\7\1\317\12\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\7\1\320\25\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\1\321\1\7\3\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\7\7\1\322\17\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\15\7"+
    "\1\323\11\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\25\7\1\324\1\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\3\7\1\325\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\326\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\17\7"+
    "\1\327\7\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\14\7\1\330\12\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\14\7\1\331\12\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\332\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\6\7"+
    "\1\333\20\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\6\7\1\334\20\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\335\5\0\2\7"+
    "\12\0\2\7\3\0\1\7\1\316\25\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\336\26\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\17\7\1\337"+
    "\7\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\2\7\1\340\24\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\11\7\1\341\15\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\7\1\342\25\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\1\343\1\7\3\0\27\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\26\7"+
    "\1\344\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\1\7\1\345\25\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\1\346\1\7\3\0\27\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\1\7\1\347\25\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\350\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\7"+
    "\1\351\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\1\352\26\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\17\7\1\353\7\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\3\7\1\354\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\1\355\1\7\3\0\27\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\356"+
    "\26\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\25\7\1\357\1\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\15\7\1\360\11\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\6\7\1\361\20\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\16\7\1\362"+
    "\10\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\14\7\1\363\12\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\11\7\1\364\13\7\1\365\1\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\3\7\1\366"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\11\7\1\367\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\15\7\1\370\11\7\1\0\1\7\1\0"+
    "\11\7\5\175\1\371\10\175\1\372\73\175\34\0\1\373"+
    "\63\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\1\374\1\7\3\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\3\7\1\375\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\6\7\1\376"+
    "\20\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\25\7\1\377\1\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\6\7\1\u0100\20\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\21\7\1\u0101\5\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\6\7\1\u0102"+
    "\10\7\1\u0103\7\7\1\0\1\7\1\0\11\7\6\0"+
    "\1\7\1\u0104\3\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\13\7\1\u0105\13\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\15\7\1\u0106"+
    "\11\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\7\7\1\u0107\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\3\7\1\u0108\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\7\1\u0109\25\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\17\7\1\u010a"+
    "\7\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\11\7\1\u010b\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\u010c\26\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\1\u010d\1\7\3\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\1\u010e\1\7\3\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u010f\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\6\7"+
    "\1\u0110\20\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\3\7\1\u0111\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\3\7\1\u0112\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u0113\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\6\7"+
    "\1\u0114\20\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\13\7\1\u0115\13\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\12\7\1\u0116\14\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u0117\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\15\7"+
    "\1\u0118\11\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\3\7\1\u0119\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\17\7\1\u011a\7\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\7\7\1\u011b\17\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\17\7"+
    "\1\u011c\7\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\7\7\1\u011d\17\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\7\7\1\u011e\17\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\15\7\1\u011f\11\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\15\7"+
    "\1\u0120\11\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\15\7\1\u0121\11\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\14\7\1\u0122\12\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\1\u0123\1\7\3\0\3\7\1\u0124"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\1\u0125\26\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\16\7\1\u0126\10\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\6\7\1\u0127\20\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\6\7\1\u0128\20\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\6\7"+
    "\1\u0129\20\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\3\7\1\u012a\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\1\u012b\26\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\26\7\1\u012c\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\7\1\u012d\25\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\u012e"+
    "\26\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\3\7\1\u012f\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\15\7\1\u0130\11\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\17\7\1\u0131\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\12\7\1\u0132"+
    "\14\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\10\7\1\u0133\16\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\11\7\1\u0134\15\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\15\7\1\u0135\11\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\6\7\1\u0136"+
    "\20\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\21\7\1\u0137\5\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\1\u0138\1\7\3\0\27\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\1\u0139\26\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\6\7\1\u013a\20\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\14\7\1\u013b"+
    "\12\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\6\7\1\u013c\20\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\7\1\u013d\25\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\12\7\1\u013e\14\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\27\7\1\0"+
    "\1\7\1\0\3\7\1\u013f\5\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\1\u0140\26\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\1\7\1\u0141\25\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\17\7\1\u0142\7\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\7\1\u0143\25\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\1\u0144\1\7\3\0"+
    "\27\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\1\35\26\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\4\7\1\u0145\22\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\6\7\1\u0146\20\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\1\u0147\1\7\3\0\3\7\1\u0148"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\1\7\1\u0149\25\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\7\1\u014a\25\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\3\7\1\u014b\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\1\u014c\26\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\3\7"+
    "\1\u014d\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\1\u014e"+
    "\1\7\3\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\15\7\1\u014f\11\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\7\7\1\u0150\17\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\14\7\1\u0151"+
    "\12\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\26\7\1\u0152\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\7\7\1\u0153\17\7\1\0\1\7\1\0\11\7"+
    "\6\0\1\7\1\u0154\3\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\12\7\1\u0155\14\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\7"+
    "\1\u0156\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\3\7\1\u0157\23\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\15\7\1\u0158\11\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u0159\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\7\7"+
    "\1\u015a\17\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\1\7\1\u015b\25\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\1\u015c\26\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\u015d\26\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u015e\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\6\7"+
    "\1\u015f\20\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\6\7\1\u0160\20\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\1\u0161\26\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\u0162\26\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\7\7\1\u0163\17\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\20\7"+
    "\1\u0164\6\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\2\7\1\u0165\24\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\3\7\1\u0166\23\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u0167\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\3\7"+
    "\1\u0168\23\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\25\7\1\u0169\1\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\1\u016a\1\7\3\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\7\1\u016b\25\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\21\7\1\u016c"+
    "\5\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\7\7\1\u016d\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\17\7\1\u016e\7\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\u016f\5\0"+
    "\2\7\12\0\2\7\3\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\7\7\1\u0170\17\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\1\7\1\u0171"+
    "\25\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\1\u0172\1\7"+
    "\3\0\27\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\1\7\1\u0173\25\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\1\u0174\1\7\3\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\12\7\1\u0175\14\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\7\7\1\u0176"+
    "\17\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\1\u0177\1\7"+
    "\3\0\27\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\1\u0178"+
    "\1\7\3\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\3\7\1\u0179\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\1\u017a\1\7\3\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u017b\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\1\u017c\1\7\3\0"+
    "\27\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\26\7\1\u017d\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\1\u017e"+
    "\1\7\3\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\17\7\1\u017f\7\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\3\7\1\u0180\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\6\7\1\u0181"+
    "\20\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\15\7\1\u0182\11\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\12\7\1\u0183\14\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\11\7\1\u0184\15\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\1\u0185\1\7\3\0\27\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\6\7"+
    "\1\u0186\20\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\1\u0187"+
    "\1\7\3\0\27\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\1\u0188\1\7\3\0\27\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\15\7\1\u0189\11\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\7\1\u018a\25\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\7"+
    "\1\u018b\25\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\1\7\1\u018c\25\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\6\7\1\u018d\20\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\7\1\u018e\25\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\1\u018f\1\7\3\0"+
    "\27\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\11\7\1\u0190\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\1\u0191\1\7\3\0\27\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\13\7\1\u0192\13\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u0193\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\1\u0194\1\7\3\0"+
    "\27\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\11\7\1\u0195\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\17\7\1\u0196\7\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\4\7\1\u0197\22\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\u0198\5\0\2\7\12\0\2\7\3\0\27\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\7\7\1\u0199"+
    "\17\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\17\7\1\u019a\7\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\11\7\1\u019b\15\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\17\7\1\u019c\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\u019d\5\0\2\7\12\0\2\7\3\0\27\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\27\7\1\0"+
    "\1\7\1\0\1\7\1\u019e\7\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\7\7\1\u019f\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\7\1\u01a0\25\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\15\7\1\u01a1\11\7\1\0"+
    "\1\7\1\0\11\7\6\0\1\7\1\u01a2\3\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\27\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\12\7\1\u01a3\14\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\14\7\1\u01a4\12\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\4\7\1\u01a5\22\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\17\7\1\u01a6"+
    "\7\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\14\7\1\u01a7\12\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\3\7\1\u01a8\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\3\7\1\u01a9\23\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\3\7\1\u01aa"+
    "\23\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\17\7\1\u01ab\7\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\17\7\1\u01ac\7\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\11\7\1\u01ad\15\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\1\7\1\u01ae"+
    "\25\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\11\7\1\u01af\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\17\7\1\u01b0\7\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\1\u01b1\1\7\3\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u01b2\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\7\7"+
    "\1\u01b3\17\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\17\7\1\u01b4\7\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\2\7\3\0\7\7\1\u01b5\17\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\3\7\1\u01b6\23\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\1\u01b7"+
    "\26\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\3\7\1\u01b8\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\4\7\1\u01b9\22\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\2\7\1\u01ba\24\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\1\u01bb\26\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\2\7\3\0\7\7"+
    "\1\u01bc\17\7\1\0\1\7\1\0\11\7\6\0\5\7"+
    "\1\0\1\7\3\0\1\7\5\0\2\7\12\0\2\7"+
    "\3\0\1\u01bd\26\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\13\7\1\u01be\13\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\12\7\1\u01bf\14\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\17\7\1\u01c0"+
    "\7\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\17\7\1\u01c1\7\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\17\7\1\u01c2\7\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\u01c3\26\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\1\u01c4\26\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\7\7\1\u01c5"+
    "\17\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\12\7\1\u01c6\14\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\4\7\1\u01c7\22\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\15\7\1\u01c8\11\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\1\7\1\u01c9"+
    "\25\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\7\7\1\u01ca\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\3\7\1\u01cb\23\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\1\7\1\u01cc\25\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\13\7\1\u01cd"+
    "\13\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\7\7\1\u01ce\17\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\1\u01cf\1\7\3\0\27\7\1\0\1\7\1\0\11\7"+
    "\6\0\5\7\1\0\1\7\3\0\1\7\5\0\2\7"+
    "\12\0\1\u01d0\1\7\3\0\27\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\1\u01d1\1\7\3\0\27\7\1\0\1\7"+
    "\1\0\11\7\6\0\5\7\1\0\1\7\3\0\1\7"+
    "\5\0\2\7\12\0\2\7\3\0\17\7\1\u01d2\7\7"+
    "\1\0\1\7\1\0\11\7\6\0\5\7\1\0\1\7"+
    "\3\0\1\7\5\0\2\7\12\0\1\u01d3\1\7\3\0"+
    "\27\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\15\7\1\u01d4\11\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\11\7\1\u01d5\15\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\11\7\1\u01d6\15\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\14\7\1\u01d7"+
    "\12\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\11\7\1\u01d8\15\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\1\7\1\u01d9\25\7\1\0\1\7\1\0"+
    "\11\7\6\0\5\7\1\0\1\7\3\0\1\7\5\0"+
    "\2\7\12\0\2\7\3\0\17\7\1\u01da\7\7\1\0"+
    "\1\7\1\0\11\7\6\0\5\7\1\0\1\7\3\0"+
    "\1\7\5\0\2\7\12\0\2\7\3\0\17\7\1\u01db"+
    "\7\7\1\0\1\7\1\0\11\7\6\0\5\7\1\0"+
    "\1\7\3\0\1\7\5\0\2\7\12\0\2\7\3\0"+
    "\3\7\1\u01dc\23\7\1\0\1\7\1\0\11\7\6\0"+
    "\5\7\1\0\1\7\3\0\1\7\5\0\2\7\12\0"+
    "\2\7\3\0\17\7\1\u01dd\7\7\1\0\1\7\1\0"+
    "\11\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[27972];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\4\1\2\11\3\1\1\11"+
    "\2\1\1\11\2\1\1\11\1\1\2\11\1\1\3\11"+
    "\2\1\2\11\22\1\1\11\1\1\1\11\11\1\1\11"+
    "\4\0\2\11\1\0\1\11\70\1\2\11\1\1\2\0"+
    "\1\11\73\1\1\11\1\0\67\1\1\11\1\0\1\11"+
    "\342\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[477];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _ResLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  _ResLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
      return;

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            }
          case 104: break;
          case 2: 
            { return NLS;
            }
          case 105: break;
          case 3: 
            { return WS;
            }
          case 106: break;
          case 4: 
            { return SYMBOL;
            }
          case 107: break;
          case 5: 
            { return IDENTIFIER;
            }
          case 108: break;
          case 6: 
            { return INT;
            }
          case 109: break;
          case 7: 
            { return MATH_SYMBOL;
            }
          case 110: break;
          case 8: 
            { return STRING;
            }
          case 111: break;
          case 9: 
            { return AT;
            }
          case 112: break;
          case 10: 
            { return DOT;
            }
          case 113: break;
          case 11: 
            { return BACKTICK;
            }
          case 114: break;
          case 12: 
            { return LBRACE;
            }
          case 115: break;
          case 13: 
            { return RBRACE;
            }
          case 116: break;
          case 14: 
            { return PRIME;
            }
          case 117: break;
          case 15: 
            { return LPAREN;
            }
          case 118: break;
          case 16: 
            { return RPAREN;
            }
          case 119: break;
          case 17: 
            { return RESTRICTION_BAR;
            }
          case 120: break;
          case 18: 
            { return COLON;
            }
          case 121: break;
          case 19: 
            { return HYPER_COLON;
            }
          case 122: break;
          case 20: 
            { return SEMICOLON;
            }
          case 123: break;
          case 21: 
            { return COMMA;
            }
          case 124: break;
          case 22: 
            { return LAMBDA;
            }
          case 125: break;
          case 23: 
            { return QV;
            }
          case 126: break;
          case 24: 
            { return SUCH_THAT;
            }
          case 127: break;
          case 25: 
            { return EXISTS;
            }
          case 128: break;
          case 26: 
            { return FORALL;
            }
          case 129: break;
          case 27: 
            { return LINE_COMMENT;
            }
          case 130: break;
          case 28: 
            { return MULTILINE_COMMENT;
            }
          case 131: break;
          case 29: 
            { return DBL_LBRACE;
            }
          case 132: break;
          case 30: 
            { return DBL_RBRACE;
            }
          case 133: break;
          case 31: 
            { return COLON_COLON;
            }
          case 134: break;
          case 32: 
            { return COLON_EQUALS;
            }
          case 135: break;
          case 33: 
            { return IS;
            }
          case 136: break;
          case 34: 
            { return IF;
            }
          case 137: break;
          case 35: 
            { return AS;
            }
          case 138: break;
          case 36: 
            { return BY;
            }
          case 139: break;
          case 37: 
            { return OF;
            }
          case 140: break;
          case 38: 
            { return DO;
            }
          case 141: break;
          case 39: 
            { return PROG_IF;
            }
          case 142: break;
          case 40: 
            { return TRIPLE_DOT;
            }
          case 143: break;
          case 41: 
            { return CHAR;
            }
          case 144: break;
          case 42: 
            { return COLON_EQUALS_COLON;
            }
          case 145: break;
          case 43: 
            { return END;
            }
          case 146: break;
          case 44: 
            { return FOR;
            }
          case 147: break;
          case 45: 
            { return VAR;
            }
          case 148: break;
          case 46: 
            { return IND_BASE;
            }
          case 149: break;
          case 47: 
            { return BASE;
            }
          case 150: break;
          case 48: 
            { return ELSE;
            }
          case 151: break;
          case 49: 
            { return PARAM_TYPE;
            }
          case 152: break;
          case 50: 
            { return TRUE;
            }
          case 153: break;
          case 51: 
            { return THEN;
            }
          case 154: break;
          case 52: 
            { return HYPO;
            }
          case 155: break;
          case 53: 
            { return FROM;
            }
          case 156: break;
          case 54: 
            { return USES;
            }
          case 157: break;
          case 55: 
            { return WITH;
            }
          case 158: break;
          case 56: 
            { return FAMILY_TYPE;
            }
          case 159: break;
          case 57: 
            { return IND_HYPO;
            }
          case 160: break;
          case 58: 
            { return FALSE;
            }
          case 161: break;
          case 59: 
            { return WHILE;
            }
          case 162: break;
          case 60: 
            { return ALTERS;
            }
          case 163: break;
          case 61: 
            { return PRECIS;
            }
          case 164: break;
          case 62: 
            { return CLEARS;
            }
          case 165: break;
          case 63: 
            { return FAMILY;
            }
          case 166: break;
          case 64: 
            { return RECORD;
            }
          case 167: break;
          case 65: 
            { return ENSURES;
            }
          case 168: break;
          case 66: 
            { return CONCEPT;
            }
          case 169: break;
          case 67: 
            { return DEFINES;
            }
          case 170: break;
          case 68: 
            { return UPDATES;
            }
          case 171: break;
          case 69: 
            { return MODELED;
            }
          case 172: break;
          case 70: 
            { return THEOREM;
            }
          case 173: break;
          case 71: 
            { return EXEMPLAR;
            }
          case 174: break;
          case 72: 
            { return EXTENDED;
            }
          case 175: break;
          case 73: 
            { return RESTORES;
            }
          case 176: break;
          case 74: 
            { return REPLACES;
            }
          case 177: break;
          case 75: 
            { return REQUIRES;
            }
          case 178: break;
          case 76: 
            { return CHANGING;
            }
          case 179: break;
          case 77: 
            { return FACILITY;
            }
          case 180: break;
          case 78: 
            { return IMPLICIT;
            }
          case 181: break;
          case 79: 
            { return EVALUATES;
            }
          case 182: break;
          case 80: 
            { return CART_PROD;
            }
          case 183: break;
          case 81: 
            { return COROLLARY;
            }
          case 184: break;
          case 82: 
            { return CHAINABLE;
            }
          case 185: break;
          case 83: 
            { return PROCEDURE;
            }
          case 186: break;
          case 84: 
            { return OTHERWISE;
            }
          case 187: break;
          case 85: 
            { return PRESERVES;
            }
          case 188: break;
          case 86: 
            { return EXTENSION;
            }
          case 189: break;
          case 87: 
            { return INDUCTIVE;
            }
          case 190: break;
          case 88: 
            { return OPERATION;
            }
          case 191: break;
          case 89: 
            { return RECURSIVE;
            }
          case 192: break;
          case 90: 
            { return EXTERNALLY;
            }
          case 193: break;
          case 91: 
            { return DECREASING;
            }
          case 194: break;
          case 92: 
            { return DEFINITION;
            }
          case 195: break;
          case 93: 
            { return IMPLEMENTED;
            }
          case 196: break;
          case 94: 
            { return EXTENDED_BY;
            }
          case 197: break;
          case 95: 
            { return CATEGORICAL;
            }
          case 198: break;
          case 96: 
            { return CONSTRAINTS;
            }
          case 199: break;
          case 97: 
            { return CONVENTIONS;
            }
          case 200: break;
          case 98: 
            { return MAINTAINING;
            }
          case 201: break;
          case 99: 
            { return WHICH_ENTAILS;
            }
          case 202: break;
          case 100: 
            { return INITIALIZATION;
            }
          case 203: break;
          case 101: 
            { return CLASSIFICATION;
            }
          case 204: break;
          case 102: 
            { return CORRESPONDENCE;
            }
          case 205: break;
          case 103: 
            { return IMPLEMENTATION;
            }
          case 206: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
