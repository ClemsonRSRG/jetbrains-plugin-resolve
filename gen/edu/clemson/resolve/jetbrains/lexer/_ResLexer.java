/* The following code was generated by JFlex 1.7.0-SNAPSHOT tweaked for IntelliJ platform */

package edu.clemson.resolve.jetbrains.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import edu.clemson.resolve.jetbrains.ResTypes;
import java.util.*;
import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static edu.clemson.resolve.jetbrains.RESOLVEParserDefinition.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0-SNAPSHOT
 * from the specification file <tt>ResLexer.flex</tt>
 */
class _ResLexer implements FlexLexer, ResTypes {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 14240 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\15\1\16\23\15"+
    "\1\17\1\15\1\20\1\21\12\15\1\22\10\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1"+
    "\33\1\34\1\23\1\35\1\36\2\23\1\15\1\37\3\23\1\40\10\23\1\41\1\42\20\23\1\43"+
    "\2\23\1\44\5\23\1\45\4\23\1\46\1\47\4\23\51\15\1\50\3\15\1\51\1\52\4\15\1"+
    "\53\12\23\1\54\u0381\23");

  /* The ZZ_CMAP_Y table has 2880 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\13\1\14\34"+
    "\13\1\15\1\16\1\17\10\1\1\20\1\21\1\22\1\23\1\24\3\22\1\25\10\13\1\26\12\13"+
    "\1\27\1\13\1\30\1\27\1\13\1\31\4\1\1\13\1\32\1\33\2\1\2\13\1\32\1\1\1\34\1"+
    "\27\5\13\1\35\1\36\1\37\1\1\1\40\1\13\1\1\1\41\5\13\1\42\1\43\1\44\1\13\1"+
    "\32\1\45\1\13\1\46\1\47\1\1\1\13\1\50\4\1\1\13\1\51\4\1\1\52\2\13\1\53\1\1"+
    "\1\54\1\55\1\27\1\56\1\57\1\60\1\61\1\62\1\63\1\55\1\16\1\64\1\57\1\60\1\65"+
    "\1\1\1\66\1\67\1\70\1\71\1\72\1\60\1\73\1\1\1\74\1\55\1\75\1\76\1\57\1\60"+
    "\1\73\1\1\1\63\1\55\1\43\1\77\1\100\1\101\1\102\1\1\1\74\1\67\1\1\1\103\1"+
    "\40\1\60\1\53\1\1\1\104\1\55\1\1\1\103\1\40\1\60\1\105\1\1\1\62\1\55\1\106"+
    "\1\103\1\40\1\13\1\107\1\62\1\110\1\55\1\111\1\112\1\113\1\13\1\114\1\115"+
    "\1\1\1\67\1\1\1\27\2\13\1\116\1\115\1\117\2\1\1\120\1\121\1\122\1\123\1\124"+
    "\1\125\2\1\1\74\1\1\1\117\1\1\1\126\1\13\1\127\1\1\1\130\7\1\2\13\1\32\1\110"+
    "\1\117\1\131\1\132\1\133\1\134\1\117\2\13\1\135\2\13\1\136\24\13\1\137\1\140"+
    "\2\13\1\137\2\13\1\141\1\142\1\14\3\13\1\142\3\13\1\32\2\1\1\13\1\1\5\13\1"+
    "\143\1\27\45\13\1\144\1\13\1\27\1\32\4\13\1\32\1\145\1\146\1\16\1\13\1\16"+
    "\1\13\1\16\1\146\1\74\3\13\1\147\1\1\1\150\1\117\2\1\1\117\5\13\1\31\2\13"+
    "\1\151\4\13\1\42\1\13\1\152\2\1\1\67\1\13\1\153\1\51\2\13\1\154\1\13\1\102"+
    "\1\117\2\1\1\13\1\115\3\13\1\51\2\1\2\117\1\155\5\1\1\112\2\13\1\147\1\156"+
    "\1\117\2\1\1\157\1\13\1\160\1\44\2\13\1\42\1\1\2\13\1\147\1\1\1\161\1\44\1"+
    "\13\1\153\6\1\1\162\1\163\14\13\4\1\21\13\1\143\2\13\1\143\1\164\1\13\1\153"+
    "\3\13\1\165\1\166\1\167\1\127\1\166\2\1\1\170\4\1\1\171\1\1\1\127\6\1\1\172"+
    "\1\173\1\174\1\175\1\176\3\1\1\177\7\1\1\200\33\201\103\1\1\201\30\1\1\202"+
    "\7\1\20\201\20\1\2\13\1\152\2\13\1\152\10\13\1\203\1\204\2\13\1\135\3\13\1"+
    "\205\1\1\1\13\1\115\4\206\4\1\1\110\35\1\1\207\2\1\1\210\1\27\4\13\1\211\1"+
    "\27\4\13\1\136\1\112\1\13\1\153\1\27\4\13\1\152\1\1\1\13\1\32\3\1\1\13\40"+
    "\1\133\13\1\42\4\1\135\13\1\42\2\1\10\13\1\127\4\1\2\13\1\153\20\13\1\127"+
    "\1\13\1\212\1\1\2\13\1\152\1\110\1\13\1\153\4\13\1\42\2\1\1\213\1\214\5\13"+
    "\1\215\1\13\1\153\1\31\3\1\1\213\1\216\1\13\1\33\1\1\3\13\1\147\1\214\2\13"+
    "\1\147\1\1\1\117\1\1\1\217\1\44\1\13\1\42\1\13\1\115\1\1\1\13\1\127\1\52\2"+
    "\13\1\33\1\110\1\117\1\220\1\221\2\13\1\50\1\1\1\222\1\117\1\13\1\223\3\13"+
    "\1\224\1\225\1\226\1\32\1\70\1\227\1\230\1\206\2\13\1\136\1\42\7\13\1\33\1"+
    "\117\72\13\1\147\1\13\1\231\2\13\1\154\120\1\26\13\1\153\6\13\1\102\2\1\1"+
    "\115\1\232\1\60\1\233\1\234\6\13\1\16\1\1\1\157\25\13\1\153\1\1\4\13\1\214"+
    "\2\13\1\31\2\1\1\154\7\1\1\220\7\13\1\127\1\1\1\117\1\27\1\32\1\27\1\32\1"+
    "\235\4\13\1\152\1\236\1\237\2\1\1\240\1\13\1\14\1\241\2\153\2\1\7\13\1\32"+
    "\30\1\1\13\1\127\3\13\1\74\2\1\2\13\1\1\1\13\1\242\2\13\1\42\1\13\1\153\2"+
    "\13\1\243\3\1\11\13\1\153\1\117\5\1\2\13\1\31\3\13\1\147\11\1\23\13\1\115"+
    "\1\13\1\42\1\31\11\1\1\244\2\13\1\245\1\13\1\42\1\13\1\115\1\13\1\152\4\1"+
    "\1\13\1\246\1\13\1\42\1\13\1\102\4\1\3\13\1\247\4\1\1\74\1\250\1\13\1\147"+
    "\2\1\1\13\1\127\1\13\1\127\2\1\1\126\1\13\1\51\1\1\3\13\1\42\1\13\1\42\1\13"+
    "\1\33\1\13\1\16\6\1\4\13\1\50\3\1\3\13\1\33\3\13\1\33\60\1\1\157\2\13\1\31"+
    "\2\1\1\67\1\1\1\157\2\13\2\1\1\13\1\50\1\117\1\157\1\13\1\115\1\67\1\1\2\13"+
    "\1\251\1\157\2\13\1\33\1\252\1\253\2\1\1\13\1\72\1\154\5\1\1\254\1\255\1\50"+
    "\2\13\1\152\1\1\1\117\1\76\1\57\1\60\1\73\1\1\1\256\1\16\21\1\3\13\1\1\1\257"+
    "\1\117\12\1\2\13\1\152\2\1\1\260\2\1\3\13\1\1\1\261\1\117\2\1\2\13\1\32\1"+
    "\1\1\117\3\1\1\13\1\102\1\1\1\117\26\1\4\13\1\117\1\110\34\1\3\13\1\50\20"+
    "\1\71\13\1\102\16\1\14\13\1\147\53\1\2\13\1\152\75\1\44\13\1\115\33\1\43\13"+
    "\1\50\1\13\1\152\1\117\6\1\1\13\1\153\1\1\3\13\1\1\1\147\1\117\1\157\1\262"+
    "\1\13\67\1\4\13\1\51\1\74\3\1\1\157\6\1\1\16\77\1\6\13\1\32\1\127\1\50\1\102"+
    "\66\1\5\13\1\220\3\13\1\146\1\263\1\264\1\265\3\13\1\266\1\267\1\13\1\270"+
    "\1\271\1\40\24\13\1\272\1\13\1\40\1\136\1\13\1\136\1\13\1\220\1\13\1\220\1"+
    "\152\1\13\1\152\1\13\1\60\1\13\1\60\1\13\1\273\3\274\14\13\1\51\123\1\1\265"+
    "\1\13\1\275\1\276\1\277\1\300\1\301\1\302\1\303\1\154\1\304\1\154\24\1\55"+
    "\13\1\115\2\1\103\13\1\51\15\13\1\153\150\13\1\16\25\1\41\13\1\153\36\1");

  /* The ZZ_CMAP_A table has 3152 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\2\1\1\1\107\1\2\1\1\22\0\1\2\1\13\1\15\4\0\1\21\1\32\1\33\1\14\1\13"+
    "\1\37\1\13\1\20\1\3\1\10\10\25\1\7\1\34\1\36\1\13\1\42\1\13\1\43\1\17\2\4"+
    "\1\51\1\66\1\67\1\74\2\4\1\76\5\4\1\100\1\54\1\4\1\102\1\4\1\104\1\24\1\105"+
    "\1\106\3\4\1\30\1\22\1\31\1\0\1\5\1\23\1\44\1\46\1\60\1\56\1\47\1\16\1\57"+
    "\1\62\1\40\2\4\1\61\1\72\1\63\1\55\1\64\1\103\1\52\1\45\1\53\1\71\1\65\1\101"+
    "\1\70\1\50\1\77\1\26\1\13\1\27\1\13\6\0\1\107\24\0\1\4\12\0\1\4\4\0\1\4\5"+
    "\0\27\4\1\0\12\4\4\0\14\4\16\0\5\4\7\0\1\4\1\0\1\4\1\0\5\12\1\11\2\12\2\11"+
    "\4\12\1\11\1\12\6\11\1\12\1\11\3\12\1\11\1\12\1\11\24\12\1\11\30\12\1\41\12"+
    "\12\1\11\11\12\2\4\10\0\6\4\1\0\26\4\2\0\1\4\6\0\10\4\10\0\13\4\5\0\3\4\15"+
    "\0\12\6\4\0\6\4\1\0\1\4\17\0\2\4\7\0\2\4\12\6\3\4\2\0\2\4\1\0\16\4\15\0\11"+
    "\4\13\0\1\4\16\0\12\6\6\4\4\0\2\4\4\0\1\4\5\0\6\4\4\0\1\4\11\0\1\4\3\0\1\4"+
    "\7\0\11\4\7\0\5\4\17\0\26\4\3\0\1\4\2\0\1\4\7\0\12\4\4\0\12\6\1\4\4\0\10\4"+
    "\2\0\2\4\2\0\26\4\1\0\7\4\1\0\1\4\3\0\4\4\3\0\1\4\20\0\1\4\15\0\2\4\1\0\1"+
    "\4\5\0\6\4\4\0\2\4\1\0\2\4\1\0\2\4\1\0\2\4\17\0\4\4\1\0\1\4\7\0\12\6\2\0\3"+
    "\4\20\0\11\4\1\0\3\4\1\0\16\4\1\0\2\4\1\0\5\4\3\0\1\4\2\0\1\4\30\0\1\4\13"+
    "\0\10\4\2\0\1\4\3\0\1\4\1\0\6\4\3\0\3\4\1\0\4\4\3\0\2\4\1\0\1\4\1\0\2\4\3"+
    "\0\2\4\3\0\3\4\3\0\14\4\13\0\10\4\1\0\2\4\10\0\3\4\5\0\4\4\1\0\5\4\3\0\1\4"+
    "\3\0\2\4\15\0\13\4\2\0\1\4\21\0\1\4\12\0\6\4\5\0\22\4\3\0\10\4\1\0\11\4\1"+
    "\0\1\4\2\0\7\4\11\0\1\4\1\0\2\4\14\0\12\6\7\0\2\4\1\0\1\4\2\0\2\4\1\0\1\4"+
    "\2\0\1\4\6\0\4\4\1\0\7\4\1\0\3\4\1\0\1\4\1\0\1\4\2\0\2\4\1\0\4\4\1\0\2\4\11"+
    "\0\1\4\2\0\5\4\1\0\1\4\11\0\12\6\2\0\14\4\1\0\24\4\13\0\5\4\3\0\6\4\4\0\4"+
    "\4\3\0\1\4\3\0\2\4\7\0\3\4\4\0\15\4\14\0\1\4\1\0\6\4\1\0\1\4\5\0\1\4\2\0\13"+
    "\4\1\0\15\4\1\0\4\4\2\0\7\4\1\0\1\4\1\0\4\4\2\0\1\4\1\0\4\4\2\0\7\4\1\0\1"+
    "\4\1\0\4\4\2\0\16\4\2\0\6\4\2\0\15\4\2\0\1\4\1\0\10\4\7\0\15\4\1\0\6\4\23"+
    "\0\1\4\4\0\1\4\3\0\11\4\1\0\1\4\5\0\17\4\1\0\16\4\2\0\14\4\13\0\1\4\15\0\7"+
    "\4\7\0\16\4\15\0\2\4\12\6\3\0\3\4\11\0\4\4\1\0\4\4\3\0\2\4\11\0\10\4\1\0\1"+
    "\4\1\0\1\4\1\0\1\4\1\0\6\4\1\0\7\4\1\0\1\4\3\0\3\4\1\0\7\4\3\0\4\4\2\0\6\4"+
    "\14\0\2\107\7\0\1\4\15\0\1\4\2\0\1\4\4\0\1\4\2\0\12\4\1\0\1\4\3\0\5\4\6\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\4\4\1\0\13\4\2\0\4\4\5\0\5\4\4\0\1\4\4\0\2\4\13\0"+
    "\1\75\2\11\1\73\34\11\2\0\1\35\15\0\5\4\6\0\4\4\3\0\2\4\14\0\10\4\7\0\10\4"+
    "\1\0\7\4\6\0\2\4\12\0\5\4\5\0\2\4\3\0\7\4\6\0\3\4\12\6\2\4\13\0\11\4\2\0\27"+
    "\4\2\0\7\4\1\0\3\4\1\0\4\4\1\0\4\4\2\0\6\4\3\0\1\4\1\0\1\4\2\0\5\4\1\0\12"+
    "\4\12\6\5\4\1\0\3\4\1\0\10\4\4\0\7\4\3\0\1\4\3\0\2\4\1\0\1\4\3\0\2\4\2\0\5"+
    "\4\2\0\1\4\1\0\1\4\30\0\3\4\3\0\6\4\2\0\6\4\2\0\6\4\11\0\7\4\4\0\5\4\3\0\5"+
    "\4\5\0\1\4\1\0\10\4\1\0\5\4\1\0\1\4\1\0\2\4\1\0\2\4\1\0\12\4\6\0\12\4\2\0"+
    "\6\4\2\0\6\4\2\0\6\4\2\0\3\4\3\0\14\4\1\0\16\4\1\0\2\4\1\0\2\4\1\0\10\4\6"+
    "\0\4\4\4\0\16\4\2\0\1\4\1\0\14\4\1\0\2\4\3\0\1\4\2\0\4\4\1\0\2\4\12\0\10\4"+
    "\6\0\6\4\1\0\3\4\1\0\12\4\3\0\1\4\12\0\4\4\13\0\12\6\1\4\1\0\1\4\3\0\7\4\1"+
    "\0\1\4\1\0\4\4\1\0\17\4\1\0\2\4\14\0\3\4\4\0\2\4\1\0\1\4\20\0\4\4\10\0\1\4"+
    "\13\0\10\4\5\0\3\4\2\0\1\4\2\0\2\4\2\0\4\4\1\0\14\4\1\0\1\4\1\0\7\4\1\0\21"+
    "\4\1\0\4\4\2\0\10\4\1\0\7\4\1\0\14\4\1\0\4\4\1\0\5\4\1\0\1\4\3\0\14\4\2\0"+
    "\13\4\1\0\10\4\2\0\22\6\1\0\2\4\1\0\1\4\2\0\1\4\1\0\12\4\1\0\4\4\1\0\1\4\1"+
    "\0\1\4\6\0\1\4\4\0\1\4\1\0\1\4\1\0\1\4\1\0\3\4\1\0\2\4\1\0\1\4\2\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0\2\4\1\0\1\4\2\0\4\4\1\0\7\4\1\0\4\4\1\0\4"+
    "\4\1\0\1\4\1\0\12\4\1\0\5\4\1\0\3\4\1\0\5\4\1\0\5\4");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\2\6\2\7"+
    "\1\4\1\10\1\5\1\11\1\12\1\1\1\13\1\14"+
    "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24"+
    "\1\25\1\5\1\26\1\27\22\5\1\30\1\5\1\31"+
    "\7\5\1\32\1\33\1\10\1\0\3\5\3\0\1\34"+
    "\1\35\1\0\1\36\1\37\1\40\1\41\2\5\1\42"+
    "\1\5\1\0\1\5\1\43\13\5\1\44\2\5\1\45"+
    "\16\5\1\46\12\5\2\33\3\5\1\47\1\50\1\51"+
    "\1\1\2\0\1\52\3\5\1\0\3\5\1\53\51\5"+
    "\1\54\1\5\2\33\1\4\2\5\1\55\1\56\1\0"+
    "\3\5\1\57\1\60\1\61\14\5\1\62\1\63\1\64"+
    "\11\5\1\65\4\5\1\66\10\5\1\67\3\5\1\70"+
    "\2\5\1\33\1\0\1\71\1\5\1\72\52\5\1\73"+
    "\1\74\2\5\1\75\15\5\1\76\5\5\1\77\4\5"+
    "\1\30\5\5\1\31\5\5\1\100\4\5\1\101\10\5"+
    "\1\102\13\5\1\103\1\5\1\104\1\5\1\105\7\5"+
    "\1\106\3\5\1\107\1\5\1\110\4\5\1\111\1\112"+
    "\1\113\5\5\1\114\4\5\1\115\1\5\1\116\6\5"+
    "\1\117\2\5\1\120\1\5\1\121\1\5\1\122\1\123"+
    "\3\5\1\124\1\5\1\125\1\5\1\126\1\5\1\127"+
    "\1\5\1\130\2\5\1\131\3\5\1\132\2\5\1\133"+
    "\4\5\1\134\1\135\1\136\1\137\1\5\1\140\1\141"+
    "\11\5\1\142\1\143\1\144\1\145";

  private static int [] zzUnpackAction() {
    int [] result = new int[458];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\110\0\220\0\110\0\330\0\u0120\0\u0168\0\110"+
    "\0\110\0\u0120\0\u01b0\0\u01f8\0\u0240\0\110\0\u0288\0\u02d0"+
    "\0\110\0\u0318\0\u0360\0\110\0\110\0\u03a8\0\110\0\u03f0"+
    "\0\110\0\110\0\110\0\u0438\0\u0120\0\110\0\u0480\0\u04c8"+
    "\0\u0510\0\u0558\0\u05a0\0\u05e8\0\u0630\0\u0678\0\u06c0\0\u0708"+
    "\0\u0750\0\u0798\0\u07e0\0\u0828\0\u0870\0\u08b8\0\u0900\0\u0948"+
    "\0\110\0\u0990\0\110\0\u09d8\0\u0a20\0\u0a68\0\u0ab0\0\u0af8"+
    "\0\u0b40\0\u0b88\0\u0bd0\0\u0c18\0\110\0\u0c60\0\u0ca8\0\u0cf0"+
    "\0\u0d38\0\u0d80\0\u0dc8\0\u0e10\0\110\0\110\0\u0e58\0\110"+
    "\0\u0ea0\0\u0120\0\u0120\0\u0ee8\0\u0f30\0\u0120\0\u0f78\0\u0fc0"+
    "\0\u1008\0\u0120\0\u1050\0\u1098\0\u10e0\0\u1128\0\u1170\0\u11b8"+
    "\0\u1200\0\u1248\0\u1290\0\u12d8\0\u1320\0\u0120\0\u1368\0\u13b0"+
    "\0\u0120\0\u13f8\0\u1440\0\u1488\0\u14d0\0\u1518\0\u1560\0\u15a8"+
    "\0\u15f0\0\u1638\0\u1680\0\u16c8\0\u1710\0\u1758\0\u17a0\0\u0120"+
    "\0\u17e8\0\u1830\0\u1878\0\u18c0\0\u1908\0\u1950\0\u1998\0\u19e0"+
    "\0\u1a28\0\u1a70\0\u1ab8\0\u1b00\0\u1b48\0\u1b90\0\u1bd8\0\u0120"+
    "\0\110\0\110\0\u0dc8\0\u1c20\0\u1c68\0\110\0\u1cb0\0\u1cf8"+
    "\0\u1d40\0\u1d88\0\u1dd0\0\u1e18\0\u1e60\0\u0120\0\u1ea8\0\u1ef0"+
    "\0\u1f38\0\u1f80\0\u1fc8\0\u2010\0\u2058\0\u20a0\0\u20e8\0\u2130"+
    "\0\u2178\0\u21c0\0\u2208\0\u2250\0\u2298\0\u22e0\0\u2328\0\u2370"+
    "\0\u23b8\0\u2400\0\u2448\0\u2490\0\u24d8\0\u2520\0\u2568\0\u25b0"+
    "\0\u25f8\0\u2640\0\u2688\0\u26d0\0\u2718\0\u2760\0\u27a8\0\u27f0"+
    "\0\u2838\0\u2880\0\u28c8\0\u2910\0\u2958\0\u29a0\0\u29e8\0\u0120"+
    "\0\u2a30\0\u2a78\0\u01b0\0\u1b00\0\u2ac0\0\u2b08\0\u0120\0\110"+
    "\0\u2b50\0\u2b98\0\u2be0\0\u2c28\0\110\0\u0120\0\u0120\0\u2c70"+
    "\0\u2cb8\0\u2d00\0\u2d48\0\u2d90\0\u2dd8\0\u2e20\0\u2e68\0\u2eb0"+
    "\0\u2ef8\0\u2f40\0\u2f88\0\u0120\0\u0120\0\u0120\0\u2fd0\0\u3018"+
    "\0\u3060\0\u30a8\0\u30f0\0\u3138\0\u3180\0\u31c8\0\u3210\0\u0120"+
    "\0\u3258\0\u32a0\0\u32e8\0\u3330\0\u0120\0\u3378\0\u33c0\0\u3408"+
    "\0\u3450\0\u3498\0\u34e0\0\u3528\0\u3570\0\u0120\0\u35b8\0\u3600"+
    "\0\u3648\0\u0120\0\u3690\0\u36d8\0\110\0\u2a78\0\u0120\0\u3720"+
    "\0\110\0\u3768\0\u37b0\0\u37f8\0\u3840\0\u3888\0\u38d0\0\u3918"+
    "\0\u3960\0\u39a8\0\u39f0\0\u3a38\0\u3a80\0\u3ac8\0\u3b10\0\u3b58"+
    "\0\u3ba0\0\u3be8\0\u3c30\0\u3c78\0\u3cc0\0\u3d08\0\u3d50\0\u3d98"+
    "\0\u3de0\0\u3e28\0\u3e70\0\u3eb8\0\u3f00\0\u3f48\0\u3f90\0\u3fd8"+
    "\0\u4020\0\u4068\0\u40b0\0\u40f8\0\u4140\0\u4188\0\u41d0\0\u4218"+
    "\0\u4260\0\u42a8\0\u42f0\0\u0120\0\u0120\0\u4338\0\u4380\0\u0120"+
    "\0\u43c8\0\u4410\0\u4458\0\u44a0\0\u44e8\0\u4530\0\u4578\0\u45c0"+
    "\0\u4608\0\u4650\0\u4698\0\u46e0\0\u4728\0\u0120\0\u4770\0\u47b8"+
    "\0\u4800\0\u4848\0\u4890\0\u0120\0\u48d8\0\u4920\0\u4968\0\u49b0"+
    "\0\u0120\0\u49f8\0\u4a40\0\u4a88\0\u4ad0\0\u4b18\0\u0120\0\u4b60"+
    "\0\u4ba8\0\u4bf0\0\u4c38\0\u4c80\0\u0120\0\u4cc8\0\u4d10\0\u4d58"+
    "\0\u4da0\0\u0120\0\u4de8\0\u4e30\0\u4e78\0\u4ec0\0\u4f08\0\u4f50"+
    "\0\u4f98\0\u4fe0\0\u0120\0\u5028\0\u5070\0\u50b8\0\u5100\0\u5148"+
    "\0\u5190\0\u51d8\0\u5220\0\u5268\0\u52b0\0\u52f8\0\u0120\0\u5340"+
    "\0\u0120\0\u5388\0\u0120\0\u53d0\0\u5418\0\u5460\0\u54a8\0\u54f0"+
    "\0\u5538\0\u5580\0\u0120\0\u55c8\0\u5610\0\u5658\0\u0120\0\u56a0"+
    "\0\u56e8\0\u5730\0\u5778\0\u57c0\0\u5808\0\u0120\0\u0120\0\u0120"+
    "\0\u5850\0\u5898\0\u58e0\0\u5928\0\u5970\0\u0120\0\u59b8\0\u5a00"+
    "\0\u5a48\0\u5a90\0\u0120\0\u5ad8\0\u0120\0\u5b20\0\u5b68\0\u5bb0"+
    "\0\u5bf8\0\u5c40\0\u5c88\0\u0120\0\u5cd0\0\u5d18\0\u0120\0\u5d60"+
    "\0\u0120\0\u5da8\0\u0120\0\u0120\0\u5df0\0\u5e38\0\u5e80\0\u0120"+
    "\0\u5ec8\0\u0120\0\u5f10\0\u0120\0\u5f58\0\u0120\0\u5fa0\0\u0120"+
    "\0\u5fe8\0\u6030\0\u0120\0\u6078\0\u60c0\0\u6108\0\u0120\0\u6150"+
    "\0\u6198\0\u0120\0\u61e0\0\u6228\0\u6270\0\u62b8\0\u0120\0\u0120"+
    "\0\u0120\0\u0120\0\u6300\0\u0120\0\u0120\0\u6348\0\u6390\0\u63d8"+
    "\0\u6420\0\u6468\0\u64b0\0\u64f8\0\u6540\0\u6588\0\u0120\0\u0120"+
    "\0\u0120\0\u0120";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[458];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\2\6\1\2\1\7\1\10"+
    "\1\11\1\12\2\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\2\1\21\1\6\1\7\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\13\1\36\1\37\1\40\1\41\1\42\1\6\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\1\6\1\51\1\52"+
    "\1\53\1\6\1\54\1\6\1\55\1\56\1\6\1\57"+
    "\1\60\1\61\1\62\1\63\1\64\1\6\1\65\1\66"+
    "\1\67\1\6\1\70\1\71\1\72\112\0\1\3\111\0"+
    "\1\73\7\0\1\13\1\74\25\0\1\13\51\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\27\6\1\0\1\6\1\0\11\6\10\0\2\7"+
    "\14\0\1\7\65\0\1\13\7\0\2\13\25\0\1\13"+
    "\45\0\1\14\1\0\13\14\1\75\4\14\1\76\65\14"+
    "\4\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\77\5\6\1\100\2\6\1\101"+
    "\15\6\1\0\1\6\1\0\11\6\21\0\1\102\67\0"+
    "\22\103\1\104\65\103\26\0\1\105\110\0\1\106\120\0"+
    "\1\107\103\0\1\110\5\0\1\111\51\0\5\6\1\0"+
    "\1\6\3\0\1\112\5\0\2\6\12\0\2\6\2\0"+
    "\1\6\1\113\15\6\1\114\6\6\1\115\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\6\1\116\13\6"+
    "\1\117\11\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\1\0\1\120\3\0\2\6"+
    "\12\0\2\6\2\0\27\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\121\3\6\1\122\22\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\15\6\1\123"+
    "\1\6\1\124\1\6\1\125\2\6\1\126\2\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\1\127\10\6"+
    "\1\130\15\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\3\6\1\131\23\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\4\6\1\132\1\6\1\133\7\6"+
    "\1\134\10\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\6\6\1\135\20\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\136\5\0\2\6"+
    "\12\0\2\6\2\0\7\6\1\137\17\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\3\6\1\140\5\6"+
    "\1\141\15\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\11\6\1\142\3\6\1\143\1\144\10\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\1\145\26\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\4\6"+
    "\1\146\22\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\6\6\1\147\20\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\3\6\1\150\23\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\24\6\1\151\2\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\1\6"+
    "\1\152\16\6\1\153\6\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\154\10\6\1\155\15\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\1\156\10\6"+
    "\1\157\15\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\160\5\0\2\6\12\0\2\6"+
    "\2\0\17\6\1\161\6\6\1\162\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\20\6\1\163\6\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\1\164\1\6\2\0\16\6"+
    "\1\165\10\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\3\6\1\166\23\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\4\6\1\167\11\6\1\170\10\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\1\171"+
    "\26\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\16\6\1\172\10\6\1\0\1\6\1\0\11\6\1\0"+
    "\1\73\1\0\106\73\3\173\1\74\7\173\1\74\1\174"+
    "\25\173\1\74\45\173\10\0\1\14\4\0\2\14\3\0"+
    "\1\14\1\0\2\14\16\0\1\14\1\0\1\14\3\0"+
    "\2\14\7\0\1\14\1\0\1\14\2\0\2\14\22\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\15\6\1\175\10\6\1\176\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\11\6\1\177\15\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\6\6"+
    "\1\200\20\6\1\0\1\6\1\0\11\6\21\0\1\201"+
    "\110\0\1\202\104\0\1\103\2\0\1\203\1\103\21\0"+
    "\1\103\1\0\1\103\3\0\2\103\7\0\1\103\1\0"+
    "\1\103\42\0\1\204\17\0\1\205\103\0\1\206\57\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\1\207\1\6\2\0\27\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\20\6\1\210\6\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\7\6\1\211\17\6"+
    "\1\0\1\6\1\0\11\6\54\0\1\212\40\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\6\1\213\25\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\6\1\214\25\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\6\1\215\10\6"+
    "\1\216\14\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\217\26\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\3\6\1\220\3\6\1\221\17\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\6\6\1\222"+
    "\1\223\17\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\6\6\1\224\10\6\1\225\7\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\6\1\226\16\6"+
    "\1\227\6\6\1\0\1\6\1\0\5\6\1\230\3\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\20\6\1\231\6\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\25\6\1\232\1\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\3\6"+
    "\1\233\23\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\3\6\1\234\5\6\1\235\15\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\16\6\1\236\10\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\14\6"+
    "\1\237\12\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\6\6\1\240\10\6\1\241\7\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\3\6\1\242\23\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\1\243"+
    "\26\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\26\6\1\244\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\20\6\1\245\6\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\3\6\1\246\23\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\247"+
    "\5\0\2\6\12\0\2\6\2\0\27\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\1\250\1\6\2\0\7\6\1\251"+
    "\17\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\3\6\1\252\23\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\12\6\1\253\14\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\1\254\1\6\2\0\27\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\12\6\1\255\14\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\14\6"+
    "\1\256\12\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\6\6\1\257\20\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\12\6\1\260\14\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\20\6\1\261\6\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\3\6"+
    "\1\262\23\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\7\6\1\263\17\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\1\264\1\6\2\0\27\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\14\6\1\265\12\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\20\6\1\266"+
    "\6\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\3\6\1\267\23\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\6\6\1\270\20\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\1\271\1\6\2\0\27\6\1\0\1\6"+
    "\1\0\11\6\1\0\14\173\1\272\76\173\1\273\7\173"+
    "\1\74\1\274\25\173\1\74\45\173\4\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\1\6\1\275\25\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\1\276\1\6\2\0\27\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\26\6\1\277\1\0\1\6\1\0"+
    "\11\6\34\0\1\300\74\0\1\301\73\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\7\6\1\302\17\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\15\6\1\303\11\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\304\23\6\1\0"+
    "\1\6\1\0\11\6\21\0\1\305\73\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\3\6\1\306\23\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\3\6\1\307\23\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\25\6\1\310\1\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\15\6\1\311"+
    "\11\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\26\6\1\312\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\3\6\1\313\23\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\7\6\1\314\17\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\3\6\1\315\23\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\11\6"+
    "\1\316\15\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\6\1\317\12\6\1\320\12\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\7\6\1\321\17\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\15\6"+
    "\1\322\11\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\25\6\1\323\1\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\3\6\1\324\23\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\3\6\1\325\23\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\17\6"+
    "\1\326\7\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\14\6\1\327\12\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\14\6\1\330\12\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\3\6\1\331\23\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\6\6"+
    "\1\332\20\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\6\6\1\333\20\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\6\1\317\17\6\1\334\5\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\1\335"+
    "\26\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\17\6\1\336\7\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\2\6\1\337\24\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\11\6\1\340\15\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\1\6\1\341"+
    "\25\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\1\342\1\6"+
    "\2\0\27\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\6\1\343\25\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\3\6\1\344\23\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\6\1\345\25\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\1\346"+
    "\26\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\17\6\1\347\7\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\3\6\1\350\23\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\1\351\1\6\2\0\27\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\352\26\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\25\6\1\353"+
    "\1\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\15\6\1\354\11\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\6\6\1\355\20\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\16\6\1\356\10\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\14\6\1\357"+
    "\12\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\11\6\1\360\13\6\1\361\1\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\362\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\11\6\1\363"+
    "\15\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\15\6\1\364\11\6\1\0\1\6\1\0\11\6\1\0"+
    "\3\173\1\365\10\173\1\366\73\173\4\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\3\6\1\367\23\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\15\6\1\370\11\6\1\0\1\6\1\0"+
    "\11\6\34\0\1\371\60\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\1\372\1\6\2\0\27\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\3\6"+
    "\1\373\23\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\6\6\1\374\20\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\6\6\1\375\20\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\25\6\1\376\1\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\20\6"+
    "\1\377\6\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\6\6\1\u0100\10\6\1\u0101\7\6\1\0\1\6"+
    "\1\0\11\6\5\0\1\6\1\u0102\3\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\27\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\13\6"+
    "\1\u0103\13\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\15\6\1\u0104\11\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\7\6\1\u0105\17\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\3\6\1\u0106\23\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\11\6"+
    "\1\u0107\15\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\u0108\26\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\1\u0109\1\6\2\0\27\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\1\u010a\1\6\2\0\27\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u010b\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\6\6\1\u010c"+
    "\20\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\3\6\1\u010d\23\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\3\6\1\u010e\23\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u010f\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\6\6\1\u0110"+
    "\20\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\13\6\1\u0111\13\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\12\6\1\u0112\14\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u0113\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\17\6\1\u0114"+
    "\7\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\7\6\1\u0115\17\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\17\6\1\u0116\7\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\7\6\1\u0117\17\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\7\6\1\u0118"+
    "\17\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\15\6\1\u0119\11\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\15\6\1\u011a\11\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\15\6\1\u011b\11\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\14\6\1\u011c"+
    "\12\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\1\u011d\1\6"+
    "\2\0\3\6\1\u011e\23\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\u011f\26\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\16\6\1\u0120\10\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\6\6\1\u0121"+
    "\20\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\6\6\1\u0122\20\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\6\6\1\u0123\20\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u0124\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\4\6\1\u0125"+
    "\22\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\1\u0126\26\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\26\6\1\u0127\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\1\6\1\u0128\25\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u0129\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\1\u012a\26\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\15\6"+
    "\1\u012b\11\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\17\6\1\u012c\7\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\12\6\1\u012d\14\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\10\6\1\u012e\16\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\11\6"+
    "\1\u012f\15\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\15\6\1\u0130\11\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\6\6\1\u0131\20\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\20\6\1\u0132\6\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\6\6"+
    "\1\u0133\20\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\14\6\1\u0134\12\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\6\6\1\u0135\20\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\6\1\u0136\25\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\12\6"+
    "\1\u0137\14\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\27\6\1\0\1\6\1\0\3\6\1\u0138\5\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\u0139\26\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\1\6\1\u013a\25\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\17\6\1\u013b"+
    "\7\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\1\6\1\u013c\25\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\1\u013d\1\6\2\0\27\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\35\26\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\6\6\1\u013e\20\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\1\u013f\1\6\2\0\3\6"+
    "\1\u0140\23\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\6\1\u0141\25\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\6\1\u0142\25\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\3\6\1\u0143\23\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\1\u0144"+
    "\26\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\3\6\1\u0145\23\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\1\u0146\1\6\2\0\27\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\15\6\1\u0147\11\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\7\6\1\u0148\17\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\14\6"+
    "\1\u0149\12\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\26\6\1\u014a\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\7\6\1\u014b\17\6\1\0\1\6\1\0"+
    "\11\6\5\0\1\6\1\u014c\3\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\27\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\12\6\1\u014d"+
    "\14\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\1\6\1\u014e\25\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\3\6\1\u014f\23\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\15\6\1\u0150\11\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\3\6\1\u0151"+
    "\23\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\1\6\1\u0152\25\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\7\6\1\u0153\17\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\1\u0154\26\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\u0155\26\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\3\6\1\u0156"+
    "\23\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\6\6\1\u0157\20\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\6\6\1\u0158\20\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\1\u0159\26\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\u015a\26\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\7\6\1\u015b"+
    "\17\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\3\6\1\u015c\23\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\3\6\1\u015d\23\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u015e\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\25\6\1\u015f"+
    "\1\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\1\u0160\1\6"+
    "\2\0\27\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\6\1\u0161\25\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\20\6\1\u0162\6\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\7\6\1\u0163\17\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\17\6"+
    "\1\u0164\7\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\21\6\1\u0165\5\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\7\6\1\u0166\17\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\6\1\u0167\25\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\1\u0168\1\6\2\0"+
    "\27\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\1\6\1\u0169\25\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\1\u016a\1\6\2\0\27\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\12\6\1\u016b\14\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\7\6\1\u016c\17\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\1\u016d\1\6\2\0"+
    "\27\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\1\u016e\1\6"+
    "\2\0\27\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\3\6\1\u016f\23\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\1\u0170\1\6\2\0\27\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u0171\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\1\u0172\1\6\2\0\27\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\26\6"+
    "\1\u0173\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\1\u0174\1\6"+
    "\2\0\27\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\17\6\1\u0175\7\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\3\6\1\u0176\23\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\6\6\1\u0177\20\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\15\6"+
    "\1\u0178\11\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\12\6\1\u0179\14\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\11\6\1\u017a\15\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\1\u017b\1\6\2\0\27\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\6\6\1\u017c"+
    "\20\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\1\u017d\1\6"+
    "\2\0\27\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\6\1\u017e\25\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\6\1\u017f\25\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\6\1\u0180\25\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\6\6"+
    "\1\u0181\20\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\6\1\u0182\25\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\1\u0183\1\6\2\0\27\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\11\6\1\u0184\15\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\1\u0185\1\6\2\0\27\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\13\6"+
    "\1\u0186\13\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\3\6\1\u0187\23\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\1\u0188\1\6\2\0\27\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\11\6\1\u0189\15\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\17\6\1\u018a"+
    "\7\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\4\6\1\u018b\22\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\21\6\1\u018c\5\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\7\6\1\u018d\17\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\17\6\1\u018e"+
    "\7\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\11\6\1\u018f\15\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\17\6\1\u0190\7\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\21\6\1\u0191\5\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\27\6\1\0"+
    "\1\6\1\0\1\6\1\u0192\7\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\7\6\1\u0193\17\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\1\6\1\u0194\25\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\15\6\1\u0195\11\6\1\0"+
    "\1\6\1\0\11\6\5\0\1\6\1\u0196\3\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\27\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\12\6\1\u0197\14\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\14\6\1\u0198\12\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\4\6\1\u0199\22\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\17\6\1\u019a"+
    "\7\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\3\6\1\u019b\23\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\3\6\1\u019c\23\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\17\6\1\u019d\7\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\17\6\1\u019e"+
    "\7\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\11\6\1\u019f\15\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\1\6\1\u01a0\25\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\11\6\1\u01a1\15\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\17\6\1\u01a2"+
    "\7\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\1\u01a3\1\6"+
    "\2\0\27\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\3\6\1\u01a4\23\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\7\6\1\u01a5\17\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\17\6\1\u01a6\7\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\7\6"+
    "\1\u01a7\17\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\3\6\1\u01a8\23\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\1\u01a9\26\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u01aa\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\4\6\1\u01ab"+
    "\22\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\2\6\1\u01ac\24\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\1\u01ad\26\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\7\6\1\u01ae\17\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\13\6\1\u01af\13\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\12\6"+
    "\1\u01b0\14\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\17\6\1\u01b1\7\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\17\6\1\u01b2\7\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\17\6\1\u01b3\7\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\1\u01b4"+
    "\26\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\1\u01b5\26\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\7\6\1\u01b6\17\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\12\6\1\u01b7\14\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\4\6\1\u01b8\22\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\15\6"+
    "\1\u01b9\11\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\1\6\1\u01ba\25\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\2\6\2\0\3\6\1\u01bb\23\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\1\6\1\u01bc\25\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\2\6\2\0\13\6"+
    "\1\u01bd\13\6\1\0\1\6\1\0\11\6\5\0\5\6"+
    "\1\0\1\6\3\0\1\6\5\0\2\6\12\0\2\6"+
    "\2\0\7\6\1\u01be\17\6\1\0\1\6\1\0\11\6"+
    "\5\0\5\6\1\0\1\6\3\0\1\6\5\0\2\6"+
    "\12\0\1\u01bf\1\6\2\0\27\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\1\u01c0\1\6\2\0\27\6\1\0\1\6"+
    "\1\0\11\6\5\0\5\6\1\0\1\6\3\0\1\6"+
    "\5\0\2\6\12\0\2\6\2\0\17\6\1\u01c1\7\6"+
    "\1\0\1\6\1\0\11\6\5\0\5\6\1\0\1\6"+
    "\3\0\1\6\5\0\2\6\12\0\1\u01c2\1\6\2\0"+
    "\27\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\15\6\1\u01c3\11\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\11\6\1\u01c4\15\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\14\6\1\u01c5\12\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\11\6\1\u01c6"+
    "\15\6\1\0\1\6\1\0\11\6\5\0\5\6\1\0"+
    "\1\6\3\0\1\6\5\0\2\6\12\0\2\6\2\0"+
    "\1\6\1\u01c7\25\6\1\0\1\6\1\0\11\6\5\0"+
    "\5\6\1\0\1\6\3\0\1\6\5\0\2\6\12\0"+
    "\2\6\2\0\17\6\1\u01c8\7\6\1\0\1\6\1\0"+
    "\11\6\5\0\5\6\1\0\1\6\3\0\1\6\5\0"+
    "\2\6\12\0\2\6\2\0\3\6\1\u01c9\23\6\1\0"+
    "\1\6\1\0\11\6\5\0\5\6\1\0\1\6\3\0"+
    "\1\6\5\0\2\6\12\0\2\6\2\0\17\6\1\u01ca"+
    "\7\6\1\0\1\6\1\0\11\6\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[26064];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\3\1\2\11\4\1\1\11"+
    "\2\1\1\11\2\1\2\11\1\1\1\11\1\1\3\11"+
    "\2\1\1\11\22\1\1\11\1\1\1\11\11\1\1\11"+
    "\1\0\3\1\3\0\2\11\1\0\1\11\7\1\1\0"+
    "\60\1\2\11\1\1\2\0\1\11\3\1\1\0\65\1"+
    "\1\11\1\0\3\1\1\11\57\1\1\11\1\0\2\1"+
    "\1\11\321\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[458];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _ResLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  _ResLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
      return;

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            }
          case 102: break;
          case 2: 
            { return NLS;
            }
          case 103: break;
          case 3: 
            { return WS;
            }
          case 104: break;
          case 4: 
            { return SYMBOL;
            }
          case 105: break;
          case 5: 
            { return IDENTIFIER;
            }
          case 106: break;
          case 6: 
            { return INT;
            }
          case 107: break;
          case 7: 
            { return MATH_SYMBOL;
            }
          case 108: break;
          case 8: 
            { return STRING;
            }
          case 109: break;
          case 9: 
            { return AT;
            }
          case 110: break;
          case 10: 
            { return DOT;
            }
          case 111: break;
          case 11: 
            { return BACKTICK;
            }
          case 112: break;
          case 12: 
            { return LBRACE;
            }
          case 113: break;
          case 13: 
            { return RBRACE;
            }
          case 114: break;
          case 14: 
            { return LBRACK;
            }
          case 115: break;
          case 15: 
            { return RBRACK;
            }
          case 116: break;
          case 16: 
            { return LPAREN;
            }
          case 117: break;
          case 17: 
            { return RPAREN;
            }
          case 118: break;
          case 18: 
            { return COLON;
            }
          case 119: break;
          case 19: 
            { return HYPER_COLON;
            }
          case 120: break;
          case 20: 
            { return SEMICOLON;
            }
          case 121: break;
          case 21: 
            { return COMMA;
            }
          case 122: break;
          case 22: 
            { return LAMBDA;
            }
          case 123: break;
          case 23: 
            { return QV;
            }
          case 124: break;
          case 24: 
            { return EXISTS;
            }
          case 125: break;
          case 25: 
            { return FORALL;
            }
          case 126: break;
          case 26: 
            { return LINE_COMMENT;
            }
          case 127: break;
          case 27: 
            { return MULTILINE_COMMENT;
            }
          case 128: break;
          case 28: 
            { return DBL_LBRACE;
            }
          case 129: break;
          case 29: 
            { return DBL_RBRACE;
            }
          case 130: break;
          case 30: 
            { return COLON_COLON;
            }
          case 131: break;
          case 31: 
            { return COLON_EQUALS;
            }
          case 132: break;
          case 32: 
            { return IF;
            }
          case 133: break;
          case 33: 
            { return IS;
            }
          case 134: break;
          case 34: 
            { return AS;
            }
          case 135: break;
          case 35: 
            { return BY;
            }
          case 136: break;
          case 36: 
            { return OF;
            }
          case 137: break;
          case 37: 
            { return DO;
            }
          case 138: break;
          case 38: 
            { return PROG_IF;
            }
          case 139: break;
          case 39: 
            { return FOR;
            }
          case 140: break;
          case 40: 
            { return TRIPLE_DOT;
            }
          case 141: break;
          case 41: 
            { return CHAR;
            }
          case 142: break;
          case 42: 
            { return COLON_EQUALS_COLON;
            }
          case 143: break;
          case 43: 
            { return END;
            }
          case 144: break;
          case 44: 
            { return VAR;
            }
          case 145: break;
          case 45: 
            { return FROM;
            }
          case 146: break;
          case 46: 
            { return IND_BASE;
            }
          case 147: break;
          case 47: 
            { return SUCH_THAT;
            }
          case 148: break;
          case 48: 
            { return BASE;
            }
          case 149: break;
          case 49: 
            { return ELSE;
            }
          case 150: break;
          case 50: 
            { return PARAM_TYPE;
            }
          case 151: break;
          case 51: 
            { return TRUE;
            }
          case 152: break;
          case 52: 
            { return THEN;
            }
          case 153: break;
          case 53: 
            { return HYPO;
            }
          case 154: break;
          case 54: 
            { return USES;
            }
          case 155: break;
          case 55: 
            { return WITH;
            }
          case 156: break;
          case 56: 
            { return FAMILY_TYPE;
            }
          case 157: break;
          case 57: 
            { return FALSE;
            }
          case 158: break;
          case 58: 
            { return IND_HYPO;
            }
          case 159: break;
          case 59: 
            { return WHILE;
            }
          case 160: break;
          case 60: 
            { return FAMILY;
            }
          case 161: break;
          case 61: 
            { return ALTERS;
            }
          case 162: break;
          case 62: 
            { return PRECIS;
            }
          case 163: break;
          case 63: 
            { return CLEARS;
            }
          case 164: break;
          case 64: 
            { return RECORD;
            }
          case 165: break;
          case 65: 
            { return ENSURES;
            }
          case 166: break;
          case 66: 
            { return CONCEPT;
            }
          case 167: break;
          case 67: 
            { return DEFINES;
            }
          case 168: break;
          case 68: 
            { return UPDATES;
            }
          case 169: break;
          case 69: 
            { return MODELED;
            }
          case 170: break;
          case 70: 
            { return THEOREM;
            }
          case 171: break;
          case 71: 
            { return EXEMPLAR;
            }
          case 172: break;
          case 72: 
            { return EXTENDED;
            }
          case 173: break;
          case 73: 
            { return RESTORES;
            }
          case 174: break;
          case 74: 
            { return REPLACES;
            }
          case 175: break;
          case 75: 
            { return REQUIRES;
            }
          case 176: break;
          case 76: 
            { return CHANGING;
            }
          case 177: break;
          case 77: 
            { return FACILITY;
            }
          case 178: break;
          case 78: 
            { return IMPLICIT;
            }
          case 179: break;
          case 79: 
            { return EVALUATES;
            }
          case 180: break;
          case 80: 
            { return CART_PROD;
            }
          case 181: break;
          case 81: 
            { return COROLLARY;
            }
          case 182: break;
          case 82: 
            { return PROCEDURE;
            }
          case 183: break;
          case 83: 
            { return OTHERWISE;
            }
          case 184: break;
          case 84: 
            { return PRESERVES;
            }
          case 185: break;
          case 85: 
            { return EXTENSION;
            }
          case 186: break;
          case 86: 
            { return INDUCTIVE;
            }
          case 187: break;
          case 87: 
            { return OPERATION;
            }
          case 188: break;
          case 88: 
            { return RECURSIVE;
            }
          case 189: break;
          case 89: 
            { return EXTERNALLY;
            }
          case 190: break;
          case 90: 
            { return DECREASING;
            }
          case 191: break;
          case 91: 
            { return DEFINITION;
            }
          case 192: break;
          case 92: 
            { return IMPLEMENTED;
            }
          case 193: break;
          case 93: 
            { return EXTENDED_BY;
            }
          case 194: break;
          case 94: 
            { return CATEGORICAL;
            }
          case 195: break;
          case 95: 
            { return CONSTRAINTS;
            }
          case 196: break;
          case 96: 
            { return CONVENTIONS;
            }
          case 197: break;
          case 97: 
            { return MAINTAINING;
            }
          case 198: break;
          case 98: 
            { return WHICH_ENTAILS;
            }
          case 199: break;
          case 99: 
            { return INITIALIZATION;
            }
          case 200: break;
          case 100: 
            { return CORRESPONDENCE;
            }
          case 201: break;
          case 101: 
            { return IMPLEMENTATION;
            }
          case 202: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
